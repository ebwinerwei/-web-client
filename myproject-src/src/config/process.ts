import { t } from '@/utils/lang'
export const fast_to_img_base_nolora_nohd_512 = ({
  client_id,
  load_img,
  style_img,
  text,
  negative,
  ip_adapter,
  ckpt,
  lora,
  cn,
  img_same,
  ip_adapter_weight,
}: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  const prompt = text.replaceAll('，', ',');
  const negative_prompt = negative.replaceAll('，', ',');
  return {
    client_id: client_id,
    prompt: {
      '1': {
        inputs: { ckpt_name: ckpt },
        class_type: 'CheckpointLoaderSimple',
      },
      '3': {
        inputs: { ipadapter_file: ip_adapter },
        class_type: 'IPAdapterModelLoader',
      },
      '4': { inputs: { clip_name: 'SD1.5\\pytorch_model.bin' }, class_type: 'CLIPVisionLoader' },
      '5': {
        inputs: {
          weight: ip_adapter_weight,
          noise: 0,
          weight_type: 'original',
          start_at: 0,
          end_at: 1,
          unfold_batch: false,
          ipadapter: ['3', 0],
          clip_vision: ['4', 0],
          image: ['6', 0],
          model: ['18', 0],
        },
        class_type: 'IPAdapterApply',
      },
      '6': { inputs: { image: style_img, upload: 'image' }, class_type: 'LoadImage' },
      '7': { inputs: { text: prompt, clip: ['18', 1] }, class_type: 'CLIPTextEncode' },
      '8': { inputs: { text: negative_prompt, clip: ['18', 1] }, class_type: 'CLIPTextEncode' },
      '9': {
        inputs: {
          seed: input_seed,
          steps: 6,
          cfg: 1.5,
          sampler_name: 'lcm',
          scheduler: 'ddim_uniform',
          denoise: 1,
          model: ['5', 0],
          positive: ['26', 0],
          negative: ['8', 0],
          latent_image: ['19', 0],
        },
        class_type: 'KSampler',
      },
      '11': { inputs: { samples: ['9', 0], vae: ['1', 2] }, class_type: 'VAEDecode' },
      '12': { inputs: { filename_prefix: 'Eva', images: ['11', 0] }, class_type: 'SaveImage' },
      '14': { inputs: { image: load_img, upload: 'image' }, class_type: 'LoadImage' },
      '15': {
        inputs: { control_net_name: cn },
        class_type: 'ControlNetLoader',
      },
      '16': {
        inputs: { strength: 0.5, conditioning: ['7', 0], control_net: ['15', 0], image: ['21', 0] },
        class_type: 'ControlNetApply',
      },
      '17': { inputs: { images: ['21', 0] }, class_type: 'PreviewImage' },
      '18': {
        inputs: {
          lora_name: 'lcm-lora-sdv1-5.safetensors',
          strength_model: 1,
          strength_clip: 1,
          model: ['1', 0],
          clip: ['1', 1],
        },
        class_type: 'LoraLoader',
      },
      '19': { inputs: { pixels: ['21', 0], vae: ['1', 2] }, class_type: 'VAEEncode' },
      '21': {
        inputs: { score_threshold: 0.1, dist_threshold: 0.1, resolution: 512, image: ['14', 0] },
        class_type: 'M-LSDPreprocessor',
      },
      '23': {
        inputs: { control_net_name: 'control_v11p_sd15_seg.pth' },
        class_type: 'ControlNetLoader',
      },
      '24': {
        inputs: { resolution: 512, image: ['14', 0] },
        class_type: 'OneFormer-COCO-SemSegPreprocessor',
      },
      '25': { inputs: { images: ['24', 0] }, class_type: 'PreviewImage' },
      '26': {
        inputs: {
          strength: img_same,
          conditioning: ['16', 0],
          control_net: ['23', 0],
          image: ['14', 0],
        },
        class_type: 'ControlNetApply',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 38,
          last_link_id: 75,
          nodes: [
            {
              id: 19,
              type: 'VAEEncode',
              pos: [955, 532],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 12,
              mode: 0,
              inputs: [
                { name: 'pixels', type: 'IMAGE', link: 75 },
                { name: 'vae', type: 'VAE', link: 28 },
              ],
              outputs: [{ name: 'LATENT', type: 'LATENT', links: [26], shape: 3 }],
              properties: { 'Node name for S&R': 'VAEEncode' },
            },
            {
              id: 16,
              type: 'ControlNetApply',
              pos: [542, 750],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 17,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 16, label: t('条件') },
                { name: 'control_net', type: 'CONTROL_NET', link: 15, label: 'ControlNet' },
                { name: 'image', type: 'IMAGE', link: 32, label: t('图像'), slot_index: 2 },
              ],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [41],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [0.5],
            },
            {
              id: 24,
              type: 'OneFormer-COCO-SemSegPreprocessor',
              pos: [579, 1222],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 9,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 39 }],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [40], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'OneFormer-COCO-SemSegPreprocessor' },
              widgets_values: [512],
            },
            {
              id: 25,
              type: 'PreviewImage',
              pos: [589, 1340],
              size: { '0': 313.5618591308594, '1': 246 },
              flags: {},
              order: 13,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 40 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 17,
              type: 'PreviewImage',
              pos: [218, 1093],
              size: { '0': 210, '1': 246 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 30, label: t('图像'), slot_index: 0 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 15,
              type: 'ControlNetLoader',
              pos: [190, 750],
              size: { '0': 310, '1': 60 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                {
                  name: 'CONTROL_NET',
                  type: 'CONTROL_NET',
                  links: [15],
                  shape: 3,
                  slot_index: 0,
                  label: 'ControlNet',
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: [cn],
            },
            {
              id: 12,
              type: 'SaveImage',
              pos: [1628, 602],
              size: { '0': 732.1408081054688, '1': 662.5580444335938 },
              flags: {},
              order: 21,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 13, label: t('图像') }],
              properties: {},
              widgets_values: ['Eva'],
            },
            {
              id: 3,
              type: 'IPAdapterModelLoader',
              pos: [176, -65],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                {
                  name: 'IPADAPTER',
                  type: 'IPADAPTER',
                  links: [1],
                  shape: 3,
                  slot_index: 0,
                  label: t('IP适配'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterModelLoader' },
              widgets_values: [ip_adapter],
            },
            {
              id: 4,
              type: 'CLIPVisionLoader',
              pos: [183, 44],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [
                {
                  name: 'CLIP_VISION',
                  type: 'CLIP_VISION',
                  links: [2],
                  shape: 3,
                  slot_index: 0,
                  label: t('CLIP视觉'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPVisionLoader' },
              widgets_values: ['SD1.5\\pytorch_model.bin'],
            },
            {
              id: 1,
              type: 'CheckpointLoaderSimple',
              pos: [181, 159],
              size: { '0': 300, '1': 100 },
              flags: {},
              order: 3,
              mode: 0,
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [21],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
                { name: 'CLIP', type: 'CLIP', links: [22], shape: 3, slot_index: 1, label: 'CLIP' },
                {
                  name: 'VAE',
                  type: 'VAE',
                  links: [20, 28],
                  shape: 3,
                  label: 'VAE',
                  slot_index: 2,
                },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: [ckpt],
            },
            {
              id: 18,
              type: 'LoraLoader',
              pos: [178, 306],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 7,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 21 },
                { name: 'clip', type: 'CLIP', link: 22 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [68], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [69], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['lcm-lora-sdv1-5.safetensors', 1, 1],
            },
            {
              id: 7,
              type: 'CLIPTextEncode',
              pos: [650, 250],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 15,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 71, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [16],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [prompt],
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 23,
              type: 'ControlNetLoader',
              pos: [588, 1090],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 4,
              mode: 0,
              outputs: [{ name: 'CONTROL_NET', type: 'CONTROL_NET', links: [42], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11p_sd15_seg.pth'],
            },
            {
              id: 11,
              type: 'VAEDecode',
              pos: [1300, 170],
              size: { '0': 140, '1': 50 },
              flags: {},
              order: 20,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 11, label: 'Latent' },
                { name: 'vae', type: 'VAE', link: 20, label: 'VAE' },
              ],
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [13, 73],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
              ],
              properties: { 'Node name for S&R': 'VAEDecode' },
            },
            {
              id: 6,
              type: 'LoadImage',
              pos: [972, 675],
              size: { '0': 453.823486328125, '1': 476.8275146484375 },
              flags: {},
              order: 5,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [3],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [style_img, 'image'],
            },
            {
              id: 21,
              type: 'M-LSDPreprocessor',
              pos: [202, 888],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 31 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [30, 32, 75], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'M-LSDPreprocessor' },
              widgets_values: [0.1, 0.1, 512],
            },
            {
              id: 9,
              type: 'KSampler',
              pos: [937, 167],
              size: { '0': 315, '1': 262 },
              flags: {},
              order: 19,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 7, label: t('模型') },
                { name: 'positive', type: 'CONDITIONING', link: 44, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 9, label: t('负面提示词') },
                { name: 'latent_image', type: 'LATENT', link: 26, label: 'Latent', slot_index: 3 },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [11],
                  shape: 3,
                  slot_index: 0,
                  label: 'Latent',
                },
              ],
              properties: { 'Node name for S&R': 'KSampler' },
              widgets_values: [input_seed, 'randomize', 6, 1.5, 'lcm', 'ddim_uniform', 1],
            },
            {
              id: 36,
              type: 'LoraLoader',
              pos: [175, 501],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 10,
              mode: 4,
              inputs: [
                { name: 'model', type: 'MODEL', link: 68 },
                { name: 'clip', type: 'CLIP', link: 69 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [70], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [71, 72], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['CandyMagic-22.safetensors', 1, 1],
            },
            {
              id: 14,
              type: 'LoadImage',
              pos: [-1203, 684],
              size: [1269.9575277341032, 1007.8716232572551],
              flags: {},
              order: 6,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [31, 39, 43],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 37,
              type: 'CR Upscale Image',
              pos: [1633, 181],
              size: { '0': 315, '1': 222 },
              flags: {},
              order: 22,
              mode: 4,
              inputs: [{ name: 'image', type: 'IMAGE', link: 73 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [74], shape: 3, slot_index: 0 },
                { name: 'show_help', type: 'STRING', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'CR Upscale Image' },
              widgets_values: ['8x_eva_super.pth', 'rescale', 1, 1024, 'lanczos', 'true', 8],
            },
            {
              id: 28,
              type: 'SaveImage',
              pos: [2430, 600],
              size: [1706.9963735591773, 956.3213885946411],
              flags: {},
              order: 23,
              mode: 4,
              inputs: [{ name: 'images', type: 'IMAGE', link: 74 }],
              properties: {},
              widgets_values: ['Eva_HD'],
            },
            {
              id: 8,
              type: 'CLIPTextEncode',
              pos: [650, 420],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 16,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 72, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [9],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [negative_prompt],
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 5,
              type: 'IPAdapterApply',
              pos: [655, -72],
              size: { '0': 210, '1': 258 },
              flags: {},
              order: 14,
              mode: 0,
              inputs: [
                { name: 'ipadapter', type: 'IPADAPTER', link: 1, label: t('IP适配') },
                { name: 'clip_vision', type: 'CLIP_VISION', link: 2, label: t('CLIP视觉') },
                { name: 'image', type: 'IMAGE', link: 3, label: t('图像') },
                { name: 'model', type: 'MODEL', link: 70, label: t('模型') },
                { name: 'attn_mask', type: 'MASK', link: null },
              ],
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [7],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterApply' },
              widgets_values: [ip_adapter_weight, 0, 'original', 0, 1, false],
            },
            {
              id: 26,
              type: 'ControlNetApply',
              pos: [580, 917],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 18,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 41 },
                { name: 'control_net', type: 'CONTROL_NET', link: 42 },
                { name: 'image', type: 'IMAGE', link: 43 },
              ],
              outputs: [{ name: 'CONDITIONING', type: 'CONDITIONING', links: [44], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [img_same],
            },
          ],
          links: [
            [1, 3, 0, 5, 0, 'IPADAPTER'],
            [2, 4, 0, 5, 1, 'CLIP_VISION'],
            [3, 6, 0, 5, 2, 'IMAGE'],
            [7, 5, 0, 9, 0, 'MODEL'],
            [9, 8, 0, 9, 2, 'CONDITIONING'],
            [11, 9, 0, 11, 0, 'LATENT'],
            [13, 11, 0, 12, 0, 'IMAGE'],
            [15, 15, 0, 16, 1, 'CONTROL_NET'],
            [16, 7, 0, 16, 0, 'CONDITIONING'],
            [20, 1, 2, 11, 1, 'VAE'],
            [21, 1, 0, 18, 0, 'MODEL'],
            [22, 1, 1, 18, 1, 'CLIP'],
            [26, 19, 0, 9, 3, 'LATENT'],
            [28, 1, 2, 19, 1, 'VAE'],
            [30, 21, 0, 17, 0, 'IMAGE'],
            [31, 14, 0, 21, 0, 'IMAGE'],
            [32, 21, 0, 16, 2, 'IMAGE'],
            [39, 14, 0, 24, 0, 'IMAGE'],
            [40, 24, 0, 25, 0, 'IMAGE'],
            [41, 16, 0, 26, 0, 'CONDITIONING'],
            [42, 23, 0, 26, 1, 'CONTROL_NET'],
            [43, 14, 0, 26, 2, 'IMAGE'],
            [44, 26, 0, 9, 1, 'CONDITIONING'],
            [68, 18, 0, 36, 0, 'MODEL'],
            [69, 18, 1, 36, 1, 'CLIP'],
            [70, 36, 0, 5, 3, 'MODEL'],
            [71, 36, 1, 7, 0, 'CLIP'],
            [72, 36, 1, 8, 0, 'CLIP'],
            [73, 11, 0, 37, 0, 'IMAGE'],
            [74, 37, 0, 28, 0, 'IMAGE'],
            [75, 21, 0, 19, 0, 'IMAGE'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};

export const fast_to_img_base_nolora_2hd_512 = ({
  client_id,
  load_img,
  style_img,
  text,
  negative,
  ip_adapter,
  ckpt,
  lora,
  cn,
  img_same,
  ip_adapter_weight,
}: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  const prompt = text.replaceAll('，', ',');
  const negative_prompt = negative.replaceAll('，', ',');
  return {
    client_id: client_id,
    prompt: {
      '1': {
        inputs: { ckpt_name: ckpt },
        class_type: 'CheckpointLoaderSimple',
      },
      '3': {
        inputs: { ipadapter_file: ip_adapter },
        class_type: 'IPAdapterModelLoader',
      },
      '4': { inputs: { clip_name: 'SD1.5\\pytorch_model.bin' }, class_type: 'CLIPVisionLoader' },
      '5': {
        inputs: {
          weight: ip_adapter_weight,
          noise: 0,
          weight_type: 'original',
          start_at: 0,
          end_at: 1,
          unfold_batch: false,
          ipadapter: ['3', 0],
          clip_vision: ['4', 0],
          image: ['6', 0],
          model: ['18', 0],
        },
        class_type: 'IPAdapterApply',
      },
      '6': { inputs: { image: style_img, upload: 'image' }, class_type: 'LoadImage' },
      '7': { inputs: { text: prompt, clip: ['18', 1] }, class_type: 'CLIPTextEncode' },
      '8': { inputs: { text: negative_prompt, clip: ['18', 1] }, class_type: 'CLIPTextEncode' },
      '9': {
        inputs: {
          seed: input_seed,
          steps: 6,
          cfg: 1.5,
          sampler_name: 'lcm',
          scheduler: 'ddim_uniform',
          denoise: 1,
          model: ['5', 0],
          positive: ['26', 0],
          negative: ['8', 0],
          latent_image: ['19', 0],
        },
        class_type: 'KSampler',
      },
      '11': { inputs: { samples: ['9', 0], vae: ['1', 2] }, class_type: 'VAEDecode' },
      '14': { inputs: { image: load_img, upload: 'image' }, class_type: 'LoadImage' },
      '15': {
        inputs: { control_net_name: cn },
        class_type: 'ControlNetLoader',
      },
      '16': {
        inputs: { strength: 0.5, conditioning: ['7', 0], control_net: ['15', 0], image: ['21', 0] },
        class_type: 'ControlNetApply',
      },
      '17': { inputs: { images: ['21', 0] }, class_type: 'PreviewImage' },
      '18': {
        inputs: {
          lora_name: 'lcm-lora-sdv1-5.safetensors',
          strength_model: 1,
          strength_clip: 1,
          model: ['1', 0],
          clip: ['1', 1],
        },
        class_type: 'LoraLoader',
      },
      '19': { inputs: { pixels: ['21', 0], vae: ['1', 2] }, class_type: 'VAEEncode' },
      '21': {
        inputs: { score_threshold: 0.1, dist_threshold: 0.1, resolution: 512, image: ['14', 0] },
        class_type: 'M-LSDPreprocessor',
      },
      '23': {
        inputs: { control_net_name: 'control_v11p_sd15_seg.pth' },
        class_type: 'ControlNetLoader',
      },
      '24': {
        inputs: { resolution: 512, image: ['14', 0] },
        class_type: 'OneFormer-COCO-SemSegPreprocessor',
      },
      '25': { inputs: { images: ['24', 0] }, class_type: 'PreviewImage' },
      '26': {
        inputs: {
          strength: img_same,
          conditioning: ['16', 0],
          control_net: ['23', 0],
          image: ['14', 0],
        },
        class_type: 'ControlNetApply',
      },
      '28': { inputs: { filename_prefix: 'Eva_HD', images: ['37', 0] }, class_type: 'SaveImage' },
      '37': {
        inputs: {
          upscale_model: '8x_eva_super.pth',
          mode: 'rescale',
          rescale_factor: 2,
          resize_width: 1024,
          resampling_method: 'lanczos',
          supersample: 'true',
          rounding_modulus: 8,
          image: ['11', 0],
        },
        class_type: 'CR Upscale Image',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 38,
          last_link_id: 75,
          nodes: [
            {
              id: 19,
              type: 'VAEEncode',
              pos: [955, 532],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 12,
              mode: 0,
              inputs: [
                { name: 'pixels', type: 'IMAGE', link: 75 },
                { name: 'vae', type: 'VAE', link: 28 },
              ],
              outputs: [{ name: 'LATENT', type: 'LATENT', links: [26], shape: 3 }],
              properties: { 'Node name for S&R': 'VAEEncode' },
            },
            {
              id: 16,
              type: 'ControlNetApply',
              pos: [542, 750],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 17,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 16, label: t('条件') },
                { name: 'control_net', type: 'CONTROL_NET', link: 15, label: 'ControlNet' },
                { name: 'image', type: 'IMAGE', link: 32, label: t('图像'), slot_index: 2 },
              ],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [41],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [0.5],
            },
            {
              id: 24,
              type: 'OneFormer-COCO-SemSegPreprocessor',
              pos: [579, 1222],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 9,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 39 }],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [40], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'OneFormer-COCO-SemSegPreprocessor' },
              widgets_values: [512],
            },
            {
              id: 25,
              type: 'PreviewImage',
              pos: [589, 1340],
              size: { '0': 313.5618591308594, '1': 246 },
              flags: {},
              order: 13,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 40 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 17,
              type: 'PreviewImage',
              pos: [218, 1093],
              size: { '0': 210, '1': 246 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 30, label: t('图像'), slot_index: 0 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 15,
              type: 'ControlNetLoader',
              pos: [190, 750],
              size: { '0': 310, '1': 60 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                {
                  name: 'CONTROL_NET',
                  type: 'CONTROL_NET',
                  links: [15],
                  shape: 3,
                  slot_index: 0,
                  label: 'ControlNet',
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: [cn],
            },
            {
              id: 12,
              type: 'SaveImage',
              pos: [1628, 602],
              size: { '0': 732.1408081054688, '1': 662.5580444335938 },
              flags: {},
              order: 21,
              mode: 4,
              inputs: [{ name: 'images', type: 'IMAGE', link: 13, label: t('图像') }],
              properties: {},
              widgets_values: ['Eva'],
            },
            {
              id: 3,
              type: 'IPAdapterModelLoader',
              pos: [176, -65],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                {
                  name: 'IPADAPTER',
                  type: 'IPADAPTER',
                  links: [1],
                  shape: 3,
                  slot_index: 0,
                  label: t('IP适配'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterModelLoader' },
              widgets_values: [ip_adapter],
            },
            {
              id: 4,
              type: 'CLIPVisionLoader',
              pos: [183, 44],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [
                {
                  name: 'CLIP_VISION',
                  type: 'CLIP_VISION',
                  links: [2],
                  shape: 3,
                  slot_index: 0,
                  label: t('CLIP视觉'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPVisionLoader' },
              widgets_values: ['SD1.5\\pytorch_model.bin'],
            },
            {
              id: 1,
              type: 'CheckpointLoaderSimple',
              pos: [181, 159],
              size: { '0': 300, '1': 100 },
              flags: {},
              order: 3,
              mode: 0,
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [21],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
                { name: 'CLIP', type: 'CLIP', links: [22], shape: 3, slot_index: 1, label: 'CLIP' },
                {
                  name: 'VAE',
                  type: 'VAE',
                  links: [20, 28],
                  shape: 3,
                  label: 'VAE',
                  slot_index: 2,
                },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: [ckpt],
            },
            {
              id: 18,
              type: 'LoraLoader',
              pos: [178, 306],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 7,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 21 },
                { name: 'clip', type: 'CLIP', link: 22 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [68], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [69], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['lcm-lora-sdv1-5.safetensors', 1, 1],
            },
            {
              id: 7,
              type: 'CLIPTextEncode',
              pos: [650, 250],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 15,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 71, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [16],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [prompt],
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 23,
              type: 'ControlNetLoader',
              pos: [588, 1090],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 4,
              mode: 0,
              outputs: [{ name: 'CONTROL_NET', type: 'CONTROL_NET', links: [42], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11p_sd15_seg.pth'],
            },
            {
              id: 11,
              type: 'VAEDecode',
              pos: [1300, 170],
              size: { '0': 140, '1': 50 },
              flags: {},
              order: 20,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 11, label: 'Latent' },
                { name: 'vae', type: 'VAE', link: 20, label: 'VAE' },
              ],
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [13, 73],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
              ],
              properties: { 'Node name for S&R': 'VAEDecode' },
            },
            {
              id: 6,
              type: 'LoadImage',
              pos: [972, 675],
              size: { '0': 453.823486328125, '1': 476.8275146484375 },
              flags: {},
              order: 5,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [3],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [style_img, 'image'],
            },
            {
              id: 21,
              type: 'M-LSDPreprocessor',
              pos: [202, 888],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 31 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [30, 32, 75], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'M-LSDPreprocessor' },
              widgets_values: [0.1, 0.1, 512],
            },
            {
              id: 9,
              type: 'KSampler',
              pos: [937, 167],
              size: { '0': 315, '1': 262 },
              flags: {},
              order: 19,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 7, label: t('模型') },
                { name: 'positive', type: 'CONDITIONING', link: 44, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 9, label: t('负面提示词') },
                { name: 'latent_image', type: 'LATENT', link: 26, label: 'Latent', slot_index: 3 },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [11],
                  shape: 3,
                  slot_index: 0,
                  label: 'Latent',
                },
              ],
              properties: { 'Node name for S&R': 'KSampler' },
              widgets_values: [input_seed, 'randomize', 6, 1.5, 'lcm', 'ddim_uniform', 1],
            },
            {
              id: 36,
              type: 'LoraLoader',
              pos: [175, 501],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 10,
              mode: 4,
              inputs: [
                { name: 'model', type: 'MODEL', link: 68 },
                { name: 'clip', type: 'CLIP', link: 69 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [70], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [71, 72], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['CandyMagic-22.safetensors', 1, 1],
            },
            {
              id: 14,
              type: 'LoadImage',
              pos: [-1203, 684],
              size: [1269.9575277341032, 1007.8716232572551],
              flags: {},
              order: 6,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [31, 39, 43],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 8,
              type: 'CLIPTextEncode',
              pos: [650, 420],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 16,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 72, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [9],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [negative_prompt],
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 5,
              type: 'IPAdapterApply',
              pos: [655, -72],
              size: { '0': 210, '1': 258 },
              flags: {},
              order: 14,
              mode: 0,
              inputs: [
                { name: 'ipadapter', type: 'IPADAPTER', link: 1, label: t('IP适配') },
                { name: 'clip_vision', type: 'CLIP_VISION', link: 2, label: t('CLIP视觉') },
                { name: 'image', type: 'IMAGE', link: 3, label: t('图像') },
                { name: 'model', type: 'MODEL', link: 70, label: t('模型') },
                { name: 'attn_mask', type: 'MASK', link: null },
              ],
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [7],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterApply' },
              widgets_values: [ip_adapter_weight, 0, 'original', 0, 1, false],
            },
            {
              id: 26,
              type: 'ControlNetApply',
              pos: [580, 917],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 18,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 41 },
                { name: 'control_net', type: 'CONTROL_NET', link: 42 },
                { name: 'image', type: 'IMAGE', link: 43 },
              ],
              outputs: [{ name: 'CONDITIONING', type: 'CONDITIONING', links: [44], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [img_same],
            },
            {
              id: 28,
              type: 'SaveImage',
              pos: [2430, 600],
              size: [1706.9963735591773, 956.3213885946411],
              flags: {},
              order: 23,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 74 }],
              properties: {},
              widgets_values: ['Eva_HD'],
            },
            {
              id: 37,
              type: 'CR Upscale Image',
              pos: [1633, 181],
              size: { '0': 315, '1': 222 },
              flags: {},
              order: 22,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 73 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [74], shape: 3, slot_index: 0 },
                { name: 'show_help', type: 'STRING', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'CR Upscale Image' },
              widgets_values: ['8x_eva_super.pth', 'rescale', 2, 1024, 'lanczos', 'true', 8],
            },
          ],
          links: [
            [1, 3, 0, 5, 0, 'IPADAPTER'],
            [2, 4, 0, 5, 1, 'CLIP_VISION'],
            [3, 6, 0, 5, 2, 'IMAGE'],
            [7, 5, 0, 9, 0, 'MODEL'],
            [9, 8, 0, 9, 2, 'CONDITIONING'],
            [11, 9, 0, 11, 0, 'LATENT'],
            [13, 11, 0, 12, 0, 'IMAGE'],
            [15, 15, 0, 16, 1, 'CONTROL_NET'],
            [16, 7, 0, 16, 0, 'CONDITIONING'],
            [20, 1, 2, 11, 1, 'VAE'],
            [21, 1, 0, 18, 0, 'MODEL'],
            [22, 1, 1, 18, 1, 'CLIP'],
            [26, 19, 0, 9, 3, 'LATENT'],
            [28, 1, 2, 19, 1, 'VAE'],
            [30, 21, 0, 17, 0, 'IMAGE'],
            [31, 14, 0, 21, 0, 'IMAGE'],
            [32, 21, 0, 16, 2, 'IMAGE'],
            [39, 14, 0, 24, 0, 'IMAGE'],
            [40, 24, 0, 25, 0, 'IMAGE'],
            [41, 16, 0, 26, 0, 'CONDITIONING'],
            [42, 23, 0, 26, 1, 'CONTROL_NET'],
            [43, 14, 0, 26, 2, 'IMAGE'],
            [44, 26, 0, 9, 1, 'CONDITIONING'],
            [68, 18, 0, 36, 0, 'MODEL'],
            [69, 18, 1, 36, 1, 'CLIP'],
            [70, 36, 0, 5, 3, 'MODEL'],
            [71, 36, 1, 7, 0, 'CLIP'],
            [72, 36, 1, 8, 0, 'CLIP'],
            [73, 11, 0, 37, 0, 'IMAGE'],
            [74, 37, 0, 28, 0, 'IMAGE'],
            [75, 21, 0, 19, 0, 'IMAGE'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};

export const fast_to_img_base_nolora_4hd_512 = ({
  client_id,
  load_img,
  style_img,
  text,
  negative,
  ip_adapter,
  ckpt,
  lora,
  cn,
  img_same,
  ip_adapter_weight,
}: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  const prompt = text.replaceAll('，', ',');
  const negative_prompt = negative.replaceAll('，', ',');
  return {
    client_id: client_id,
    prompt: {
      '1': {
        inputs: { ckpt_name: ckpt },
        class_type: 'CheckpointLoaderSimple',
      },
      '3': {
        inputs: { ipadapter_file: ip_adapter },
        class_type: 'IPAdapterModelLoader',
      },
      '4': { inputs: { clip_name: 'SD1.5\\pytorch_model.bin' }, class_type: 'CLIPVisionLoader' },
      '5': {
        inputs: {
          weight: ip_adapter_weight,
          noise: 0,
          weight_type: 'original',
          start_at: 0,
          end_at: 1,
          unfold_batch: false,
          ipadapter: ['3', 0],
          clip_vision: ['4', 0],
          image: ['6', 0],
          model: ['18', 0],
        },
        class_type: 'IPAdapterApply',
      },
      '6': { inputs: { image: style_img, upload: 'image' }, class_type: 'LoadImage' },
      '7': { inputs: { text: prompt, clip: ['18', 1] }, class_type: 'CLIPTextEncode' },
      '8': { inputs: { text: negative_prompt, clip: ['18', 1] }, class_type: 'CLIPTextEncode' },
      '9': {
        inputs: {
          seed: input_seed,
          steps: 6,
          cfg: 1.5,
          sampler_name: 'lcm',
          scheduler: 'ddim_uniform',
          denoise: 1,
          model: ['5', 0],
          positive: ['26', 0],
          negative: ['8', 0],
          latent_image: ['19', 0],
        },
        class_type: 'KSampler',
      },
      '11': { inputs: { samples: ['9', 0], vae: ['1', 2] }, class_type: 'VAEDecode' },
      '14': { inputs: { image: load_img, upload: 'image' }, class_type: 'LoadImage' },
      '15': {
        inputs: { control_net_name: cn },
        class_type: 'ControlNetLoader',
      },
      '16': {
        inputs: { strength: 0.5, conditioning: ['7', 0], control_net: ['15', 0], image: ['21', 0] },
        class_type: 'ControlNetApply',
      },
      '17': { inputs: { images: ['21', 0] }, class_type: 'PreviewImage' },
      '18': {
        inputs: {
          lora_name: 'lcm-lora-sdv1-5.safetensors',
          strength_model: 1,
          strength_clip: 1,
          model: ['1', 0],
          clip: ['1', 1],
        },
        class_type: 'LoraLoader',
      },
      '19': { inputs: { pixels: ['21', 0], vae: ['1', 2] }, class_type: 'VAEEncode' },
      '21': {
        inputs: { score_threshold: 0.1, dist_threshold: 0.1, resolution: 512, image: ['14', 0] },
        class_type: 'M-LSDPreprocessor',
      },
      '23': {
        inputs: { control_net_name: 'control_v11p_sd15_seg.pth' },
        class_type: 'ControlNetLoader',
      },
      '24': {
        inputs: { resolution: 512, image: ['14', 0] },
        class_type: 'OneFormer-COCO-SemSegPreprocessor',
      },
      '25': { inputs: { images: ['24', 0] }, class_type: 'PreviewImage' },
      '26': {
        inputs: {
          strength: img_same,
          conditioning: ['16', 0],
          control_net: ['23', 0],
          image: ['14', 0],
        },
        class_type: 'ControlNetApply',
      },
      '28': { inputs: { filename_prefix: 'Eva_HD', images: ['37', 0] }, class_type: 'SaveImage' },
      '37': {
        inputs: {
          upscale_model: '8x_eva_super.pth',
          mode: 'rescale',
          rescale_factor: 4,
          resize_width: 1024,
          resampling_method: 'lanczos',
          supersample: 'true',
          rounding_modulus: 8,
          image: ['11', 0],
        },
        class_type: 'CR Upscale Image',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 38,
          last_link_id: 75,
          nodes: [
            {
              id: 19,
              type: 'VAEEncode',
              pos: [955, 532],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 12,
              mode: 0,
              inputs: [
                { name: 'pixels', type: 'IMAGE', link: 75 },
                { name: 'vae', type: 'VAE', link: 28 },
              ],
              outputs: [{ name: 'LATENT', type: 'LATENT', links: [26], shape: 3 }],
              properties: { 'Node name for S&R': 'VAEEncode' },
            },
            {
              id: 16,
              type: 'ControlNetApply',
              pos: [542, 750],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 17,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 16, label: t('条件') },
                { name: 'control_net', type: 'CONTROL_NET', link: 15, label: 'ControlNet' },
                { name: 'image', type: 'IMAGE', link: 32, label: t('图像'), slot_index: 2 },
              ],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [41],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [0.5],
            },
            {
              id: 24,
              type: 'OneFormer-COCO-SemSegPreprocessor',
              pos: [579, 1222],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 9,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 39 }],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [40], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'OneFormer-COCO-SemSegPreprocessor' },
              widgets_values: [512],
            },
            {
              id: 25,
              type: 'PreviewImage',
              pos: [589, 1340],
              size: { '0': 313.5618591308594, '1': 246 },
              flags: {},
              order: 13,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 40 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 17,
              type: 'PreviewImage',
              pos: [218, 1093],
              size: { '0': 210, '1': 246 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 30, label: t('图像'), slot_index: 0 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 15,
              type: 'ControlNetLoader',
              pos: [190, 750],
              size: { '0': 310, '1': 60 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                {
                  name: 'CONTROL_NET',
                  type: 'CONTROL_NET',
                  links: [15],
                  shape: 3,
                  slot_index: 0,
                  label: 'ControlNet',
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: [cn],
            },
            {
              id: 12,
              type: 'SaveImage',
              pos: [1628, 602],
              size: { '0': 732.1408081054688, '1': 662.5580444335938 },
              flags: {},
              order: 21,
              mode: 4,
              inputs: [{ name: 'images', type: 'IMAGE', link: 13, label: t('图像') }],
              properties: {},
              widgets_values: ['Eva'],
            },
            {
              id: 3,
              type: 'IPAdapterModelLoader',
              pos: [176, -65],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                {
                  name: 'IPADAPTER',
                  type: 'IPADAPTER',
                  links: [1],
                  shape: 3,
                  slot_index: 0,
                  label: t('IP适配'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterModelLoader' },
              widgets_values: [ip_adapter],
            },
            {
              id: 4,
              type: 'CLIPVisionLoader',
              pos: [183, 44],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [
                {
                  name: 'CLIP_VISION',
                  type: 'CLIP_VISION',
                  links: [2],
                  shape: 3,
                  slot_index: 0,
                  label: t('CLIP视觉'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPVisionLoader' },
              widgets_values: ['SD1.5\\pytorch_model.bin'],
            },
            {
              id: 1,
              type: 'CheckpointLoaderSimple',
              pos: [181, 159],
              size: { '0': 300, '1': 100 },
              flags: {},
              order: 3,
              mode: 0,
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [21],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
                { name: 'CLIP', type: 'CLIP', links: [22], shape: 3, slot_index: 1, label: 'CLIP' },
                {
                  name: 'VAE',
                  type: 'VAE',
                  links: [20, 28],
                  shape: 3,
                  label: 'VAE',
                  slot_index: 2,
                },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: [ckpt],
            },
            {
              id: 18,
              type: 'LoraLoader',
              pos: [178, 306],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 7,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 21 },
                { name: 'clip', type: 'CLIP', link: 22 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [68], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [69], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['lcm-lora-sdv1-5.safetensors', 1, 1],
            },
            {
              id: 7,
              type: 'CLIPTextEncode',
              pos: [650, 250],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 15,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 71, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [16],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [prompt],
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 23,
              type: 'ControlNetLoader',
              pos: [588, 1090],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 4,
              mode: 0,
              outputs: [{ name: 'CONTROL_NET', type: 'CONTROL_NET', links: [42], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11p_sd15_seg.pth'],
            },
            {
              id: 11,
              type: 'VAEDecode',
              pos: [1300, 170],
              size: { '0': 140, '1': 50 },
              flags: {},
              order: 20,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 11, label: 'Latent' },
                { name: 'vae', type: 'VAE', link: 20, label: 'VAE' },
              ],
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [13, 73],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
              ],
              properties: { 'Node name for S&R': 'VAEDecode' },
            },
            {
              id: 6,
              type: 'LoadImage',
              pos: [972, 675],
              size: { '0': 453.823486328125, '1': 476.8275146484375 },
              flags: {},
              order: 5,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [3],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [style_img, 'image'],
            },
            {
              id: 21,
              type: 'M-LSDPreprocessor',
              pos: [202, 888],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 31 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [30, 32, 75], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'M-LSDPreprocessor' },
              widgets_values: [0.1, 0.1, 512],
            },
            {
              id: 9,
              type: 'KSampler',
              pos: [937, 167],
              size: { '0': 315, '1': 262 },
              flags: {},
              order: 19,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 7, label: t('模型') },
                { name: 'positive', type: 'CONDITIONING', link: 44, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 9, label: t('负面提示词') },
                { name: 'latent_image', type: 'LATENT', link: 26, label: 'Latent', slot_index: 3 },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [11],
                  shape: 3,
                  slot_index: 0,
                  label: 'Latent',
                },
              ],
              properties: { 'Node name for S&R': 'KSampler' },
              widgets_values: [input_seed, 'randomize', 6, 1.5, 'lcm', 'ddim_uniform', 1],
            },
            {
              id: 36,
              type: 'LoraLoader',
              pos: [175, 501],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 10,
              mode: 4,
              inputs: [
                { name: 'model', type: 'MODEL', link: 68 },
                { name: 'clip', type: 'CLIP', link: 69 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [70], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [71, 72], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['CandyMagic-22.safetensors', 1, 1],
            },
            {
              id: 14,
              type: 'LoadImage',
              pos: [-1203, 684],
              size: [1269.9575277341032, 1007.8716232572551],
              flags: {},
              order: 6,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [31, 39, 43],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 8,
              type: 'CLIPTextEncode',
              pos: [650, 420],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 16,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 72, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [9],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [negative_prompt],
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 5,
              type: 'IPAdapterApply',
              pos: [655, -72],
              size: { '0': 210, '1': 258 },
              flags: {},
              order: 14,
              mode: 0,
              inputs: [
                { name: 'ipadapter', type: 'IPADAPTER', link: 1, label: t('IP适配') },
                { name: 'clip_vision', type: 'CLIP_VISION', link: 2, label: t('CLIP视觉') },
                { name: 'image', type: 'IMAGE', link: 3, label: t('图像') },
                { name: 'model', type: 'MODEL', link: 70, label: t('模型') },
                { name: 'attn_mask', type: 'MASK', link: null },
              ],
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [7],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterApply' },
              widgets_values: [ip_adapter_weight, 0, 'original', 0, 1, false],
            },
            {
              id: 26,
              type: 'ControlNetApply',
              pos: [580, 917],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 18,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 41 },
                { name: 'control_net', type: 'CONTROL_NET', link: 42 },
                { name: 'image', type: 'IMAGE', link: 43 },
              ],
              outputs: [{ name: 'CONDITIONING', type: 'CONDITIONING', links: [44], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [img_same],
            },
            {
              id: 28,
              type: 'SaveImage',
              pos: [2430, 600],
              size: [1706.9963735591773, 956.3213885946411],
              flags: {},
              order: 23,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 74 }],
              properties: {},
              widgets_values: ['Eva_HD'],
            },
            {
              id: 37,
              type: 'CR Upscale Image',
              pos: [1633, 181],
              size: { '0': 315, '1': 222 },
              flags: {},
              order: 22,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 73 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [74], shape: 3, slot_index: 0 },
                { name: 'show_help', type: 'STRING', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'CR Upscale Image' },
              widgets_values: ['8x_eva_super.pth', 'rescale', 4, 1024, 'lanczos', 'true', 8],
            },
          ],
          links: [
            [1, 3, 0, 5, 0, 'IPADAPTER'],
            [2, 4, 0, 5, 1, 'CLIP_VISION'],
            [3, 6, 0, 5, 2, 'IMAGE'],
            [7, 5, 0, 9, 0, 'MODEL'],
            [9, 8, 0, 9, 2, 'CONDITIONING'],
            [11, 9, 0, 11, 0, 'LATENT'],
            [13, 11, 0, 12, 0, 'IMAGE'],
            [15, 15, 0, 16, 1, 'CONTROL_NET'],
            [16, 7, 0, 16, 0, 'CONDITIONING'],
            [20, 1, 2, 11, 1, 'VAE'],
            [21, 1, 0, 18, 0, 'MODEL'],
            [22, 1, 1, 18, 1, 'CLIP'],
            [26, 19, 0, 9, 3, 'LATENT'],
            [28, 1, 2, 19, 1, 'VAE'],
            [30, 21, 0, 17, 0, 'IMAGE'],
            [31, 14, 0, 21, 0, 'IMAGE'],
            [32, 21, 0, 16, 2, 'IMAGE'],
            [39, 14, 0, 24, 0, 'IMAGE'],
            [40, 24, 0, 25, 0, 'IMAGE'],
            [41, 16, 0, 26, 0, 'CONDITIONING'],
            [42, 23, 0, 26, 1, 'CONTROL_NET'],
            [43, 14, 0, 26, 2, 'IMAGE'],
            [44, 26, 0, 9, 1, 'CONDITIONING'],
            [68, 18, 0, 36, 0, 'MODEL'],
            [69, 18, 1, 36, 1, 'CLIP'],
            [70, 36, 0, 5, 3, 'MODEL'],
            [71, 36, 1, 7, 0, 'CLIP'],
            [72, 36, 1, 8, 0, 'CLIP'],
            [73, 11, 0, 37, 0, 'IMAGE'],
            [74, 37, 0, 28, 0, 'IMAGE'],
            [75, 21, 0, 19, 0, 'IMAGE'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};

export const fast_to_img_base_lora_nohd_512 = ({
  client_id,
  load_img,
  style_img,
  text,
  negative,
  ip_adapter,
  ckpt,
  lora,
  cn,
  img_same,
  ip_adapter_weight,
}: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  const prompt = text.replaceAll('，', ',');
  const negative_prompt = negative.replaceAll('，', ',');
  return {
    client_id: client_id,
    prompt: {
      '1': {
        inputs: { ckpt_name: ckpt },
        class_type: 'CheckpointLoaderSimple',
      },
      '3': {
        inputs: { ipadapter_file: ip_adapter },
        class_type: 'IPAdapterModelLoader',
      },
      '4': { inputs: { clip_name: 'SD1.5\\pytorch_model.bin' }, class_type: 'CLIPVisionLoader' },
      '5': {
        inputs: {
          weight: ip_adapter_weight,
          noise: 0,
          weight_type: 'original',
          start_at: 0,
          end_at: 1,
          unfold_batch: false,
          ipadapter: ['3', 0],
          clip_vision: ['4', 0],
          image: ['6', 0],
          model: ['36', 0],
        },
        class_type: 'IPAdapterApply',
      },
      '6': { inputs: { image: style_img, upload: 'image' }, class_type: 'LoadImage' },
      '7': { inputs: { text: prompt, clip: ['36', 1] }, class_type: 'CLIPTextEncode' },
      '8': { inputs: { text: negative_prompt, clip: ['36', 1] }, class_type: 'CLIPTextEncode' },
      '9': {
        inputs: {
          seed: input_seed,
          steps: 6,
          cfg: 1.5,
          sampler_name: 'lcm',
          scheduler: 'ddim_uniform',
          denoise: 1,
          model: ['5', 0],
          positive: ['26', 0],
          negative: ['8', 0],
          latent_image: ['19', 0],
        },
        class_type: 'KSampler',
      },
      '11': { inputs: { samples: ['9', 0], vae: ['1', 2] }, class_type: 'VAEDecode' },
      '12': { inputs: { filename_prefix: 'Eva', images: ['11', 0] }, class_type: 'SaveImage' },
      '14': { inputs: { image: load_img, upload: 'image' }, class_type: 'LoadImage' },
      '15': {
        inputs: { control_net_name: cn },
        class_type: 'ControlNetLoader',
      },
      '16': {
        inputs: { strength: 0.5, conditioning: ['7', 0], control_net: ['15', 0], image: ['21', 0] },
        class_type: 'ControlNetApply',
      },
      '17': { inputs: { images: ['21', 0] }, class_type: 'PreviewImage' },
      '18': {
        inputs: {
          lora_name: 'lcm-lora-sdv1-5.safetensors',
          strength_model: 1,
          strength_clip: 1,
          model: ['1', 0],
          clip: ['1', 1],
        },
        class_type: 'LoraLoader',
      },
      '19': { inputs: { pixels: ['21', 0], vae: ['1', 2] }, class_type: 'VAEEncode' },
      '21': {
        inputs: { score_threshold: 0.1, dist_threshold: 0.1, resolution: 512, image: ['14', 0] },
        class_type: 'M-LSDPreprocessor',
      },
      '23': {
        inputs: { control_net_name: 'control_v11p_sd15_seg.pth' },
        class_type: 'ControlNetLoader',
      },
      '24': {
        inputs: { resolution: 512, image: ['14', 0] },
        class_type: 'OneFormer-COCO-SemSegPreprocessor',
      },
      '25': { inputs: { images: ['24', 0] }, class_type: 'PreviewImage' },
      '26': {
        inputs: {
          strength: img_same,
          conditioning: ['16', 0],
          control_net: ['23', 0],
          image: ['14', 0],
        },
        class_type: 'ControlNetApply',
      },
      '36': {
        inputs: {
          lora_name: lora,
          strength_model: 1,
          strength_clip: 1,
          model: ['18', 0],
          clip: ['18', 1],
        },
        class_type: 'LoraLoader',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 38,
          last_link_id: 75,
          nodes: [
            {
              id: 19,
              type: 'VAEEncode',
              pos: [955, 532],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 12,
              mode: 0,
              inputs: [
                { name: 'pixels', type: 'IMAGE', link: 75 },
                { name: 'vae', type: 'VAE', link: 28 },
              ],
              outputs: [{ name: 'LATENT', type: 'LATENT', links: [26], shape: 3 }],
              properties: { 'Node name for S&R': 'VAEEncode' },
            },
            {
              id: 16,
              type: 'ControlNetApply',
              pos: [542, 750],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 17,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 16, label: t('条件') },
                { name: 'control_net', type: 'CONTROL_NET', link: 15, label: 'ControlNet' },
                { name: 'image', type: 'IMAGE', link: 32, label: t('图像'), slot_index: 2 },
              ],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [41],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [0.5],
            },
            {
              id: 24,
              type: 'OneFormer-COCO-SemSegPreprocessor',
              pos: [579, 1222],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 9,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 39 }],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [40], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'OneFormer-COCO-SemSegPreprocessor' },
              widgets_values: [512],
            },
            {
              id: 25,
              type: 'PreviewImage',
              pos: [589, 1340],
              size: { '0': 313.5618591308594, '1': 246 },
              flags: {},
              order: 13,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 40 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 17,
              type: 'PreviewImage',
              pos: [218, 1093],
              size: { '0': 210, '1': 246 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 30, label: t('图像'), slot_index: 0 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 15,
              type: 'ControlNetLoader',
              pos: [190, 750],
              size: { '0': 310, '1': 60 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                {
                  name: 'CONTROL_NET',
                  type: 'CONTROL_NET',
                  links: [15],
                  shape: 3,
                  slot_index: 0,
                  label: 'ControlNet',
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: [cn],
            },
            {
              id: 3,
              type: 'IPAdapterModelLoader',
              pos: [176, -65],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                {
                  name: 'IPADAPTER',
                  type: 'IPADAPTER',
                  links: [1],
                  shape: 3,
                  slot_index: 0,
                  label: t('IP适配'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterModelLoader' },
              widgets_values: [ip_adapter],
            },
            {
              id: 4,
              type: 'CLIPVisionLoader',
              pos: [183, 44],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [
                {
                  name: 'CLIP_VISION',
                  type: 'CLIP_VISION',
                  links: [2],
                  shape: 3,
                  slot_index: 0,
                  label: t('CLIP视觉'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPVisionLoader' },
              widgets_values: ['SD1.5\\pytorch_model.bin'],
            },
            {
              id: 1,
              type: 'CheckpointLoaderSimple',
              pos: [181, 159],
              size: { '0': 300, '1': 100 },
              flags: {},
              order: 3,
              mode: 0,
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [21],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
                { name: 'CLIP', type: 'CLIP', links: [22], shape: 3, slot_index: 1, label: 'CLIP' },
                {
                  name: 'VAE',
                  type: 'VAE',
                  links: [20, 28],
                  shape: 3,
                  label: 'VAE',
                  slot_index: 2,
                },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: [ckpt],
            },
            {
              id: 18,
              type: 'LoraLoader',
              pos: [178, 306],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 7,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 21 },
                { name: 'clip', type: 'CLIP', link: 22 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [68], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [69], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['lcm-lora-sdv1-5.safetensors', 1, 1],
            },
            {
              id: 7,
              type: 'CLIPTextEncode',
              pos: [650, 250],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 15,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 71, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [16],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [prompt],
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 23,
              type: 'ControlNetLoader',
              pos: [588, 1090],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 4,
              mode: 0,
              outputs: [{ name: 'CONTROL_NET', type: 'CONTROL_NET', links: [42], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11p_sd15_seg.pth'],
            },
            {
              id: 11,
              type: 'VAEDecode',
              pos: [1300, 170],
              size: { '0': 140, '1': 50 },
              flags: {},
              order: 20,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 11, label: 'Latent' },
                { name: 'vae', type: 'VAE', link: 20, label: 'VAE' },
              ],
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [13, 73],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
              ],
              properties: { 'Node name for S&R': 'VAEDecode' },
            },
            {
              id: 6,
              type: 'LoadImage',
              pos: [972, 675],
              size: { '0': 453.823486328125, '1': 476.8275146484375 },
              flags: {},
              order: 5,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [3],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [style_img, 'image'],
            },
            {
              id: 21,
              type: 'M-LSDPreprocessor',
              pos: [202, 888],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 31 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [30, 32, 75], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'M-LSDPreprocessor' },
              widgets_values: [0.1, 0.1, 512],
            },
            {
              id: 9,
              type: 'KSampler',
              pos: [937, 167],
              size: { '0': 315, '1': 262 },
              flags: {},
              order: 19,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 7, label: t('模型') },
                { name: 'positive', type: 'CONDITIONING', link: 44, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 9, label: t('负面提示词') },
                { name: 'latent_image', type: 'LATENT', link: 26, label: 'Latent', slot_index: 3 },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [11],
                  shape: 3,
                  slot_index: 0,
                  label: 'Latent',
                },
              ],
              properties: { 'Node name for S&R': 'KSampler' },
              widgets_values: [input_seed, 'randomize', 6, 1.5, 'lcm', 'ddim_uniform', 1],
            },
            {
              id: 14,
              type: 'LoadImage',
              pos: [-1203, 684],
              size: [1269.9575277341032, 1007.8716232572551],
              flags: {},
              order: 6,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [31, 39, 43],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 8,
              type: 'CLIPTextEncode',
              pos: [650, 420],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 16,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 72, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [9],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [negative_prompt],
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 5,
              type: 'IPAdapterApply',
              pos: [655, -72],
              size: { '0': 210, '1': 258 },
              flags: {},
              order: 14,
              mode: 0,
              inputs: [
                { name: 'ipadapter', type: 'IPADAPTER', link: 1, label: t('IP适配') },
                { name: 'clip_vision', type: 'CLIP_VISION', link: 2, label: t('CLIP视觉') },
                { name: 'image', type: 'IMAGE', link: 3, label: t('图像') },
                { name: 'model', type: 'MODEL', link: 70, label: t('模型') },
                { name: 'attn_mask', type: 'MASK', link: null },
              ],
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [7],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterApply' },
              widgets_values: [ip_adapter_weight, 0, 'original', 0, 1, false],
            },
            {
              id: 26,
              type: 'ControlNetApply',
              pos: [580, 917],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 18,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 41 },
                { name: 'control_net', type: 'CONTROL_NET', link: 42 },
                { name: 'image', type: 'IMAGE', link: 43 },
              ],
              outputs: [{ name: 'CONDITIONING', type: 'CONDITIONING', links: [44], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [img_same],
            },
            {
              id: 28,
              type: 'SaveImage',
              pos: [2430, 600],
              size: [1706.9963735591773, 956.3213885946411],
              flags: {},
              order: 23,
              mode: 4,
              inputs: [{ name: 'images', type: 'IMAGE', link: 74 }],
              properties: {},
              widgets_values: ['Eva_HD'],
            },
            {
              id: 37,
              type: 'CR Upscale Image',
              pos: [1633, 181],
              size: { '0': 315, '1': 222 },
              flags: {},
              order: 22,
              mode: 4,
              inputs: [{ name: 'image', type: 'IMAGE', link: 73 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [74], shape: 3, slot_index: 0 },
                { name: 'show_help', type: 'STRING', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'CR Upscale Image' },
              widgets_values: ['8x_eva_super.pth', 'rescale', 2, 1024, 'lanczos', 'true', 8],
            },
            {
              id: 12,
              type: 'SaveImage',
              pos: [1628, 602],
              size: { '0': 732.1408081054688, '1': 662.5580444335938 },
              flags: {},
              order: 21,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 13, label: t('图像') }],
              properties: {},
              widgets_values: ['Eva'],
            },
            {
              id: 36,
              type: 'LoraLoader',
              pos: [175, 501],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 10,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 68 },
                { name: 'clip', type: 'CLIP', link: 69 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [70], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [71, 72], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: [lora, 1, 1],
            },
          ],
          links: [
            [1, 3, 0, 5, 0, 'IPADAPTER'],
            [2, 4, 0, 5, 1, 'CLIP_VISION'],
            [3, 6, 0, 5, 2, 'IMAGE'],
            [7, 5, 0, 9, 0, 'MODEL'],
            [9, 8, 0, 9, 2, 'CONDITIONING'],
            [11, 9, 0, 11, 0, 'LATENT'],
            [13, 11, 0, 12, 0, 'IMAGE'],
            [15, 15, 0, 16, 1, 'CONTROL_NET'],
            [16, 7, 0, 16, 0, 'CONDITIONING'],
            [20, 1, 2, 11, 1, 'VAE'],
            [21, 1, 0, 18, 0, 'MODEL'],
            [22, 1, 1, 18, 1, 'CLIP'],
            [26, 19, 0, 9, 3, 'LATENT'],
            [28, 1, 2, 19, 1, 'VAE'],
            [30, 21, 0, 17, 0, 'IMAGE'],
            [31, 14, 0, 21, 0, 'IMAGE'],
            [32, 21, 0, 16, 2, 'IMAGE'],
            [39, 14, 0, 24, 0, 'IMAGE'],
            [40, 24, 0, 25, 0, 'IMAGE'],
            [41, 16, 0, 26, 0, 'CONDITIONING'],
            [42, 23, 0, 26, 1, 'CONTROL_NET'],
            [43, 14, 0, 26, 2, 'IMAGE'],
            [44, 26, 0, 9, 1, 'CONDITIONING'],
            [68, 18, 0, 36, 0, 'MODEL'],
            [69, 18, 1, 36, 1, 'CLIP'],
            [70, 36, 0, 5, 3, 'MODEL'],
            [71, 36, 1, 7, 0, 'CLIP'],
            [72, 36, 1, 8, 0, 'CLIP'],
            [73, 11, 0, 37, 0, 'IMAGE'],
            [74, 37, 0, 28, 0, 'IMAGE'],
            [75, 21, 0, 19, 0, 'IMAGE'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};

export const fast_to_img_base_lora_2hd_512 = ({
  client_id,
  load_img,
  style_img,
  text,
  negative,
  ip_adapter,
  ckpt,
  lora,
  cn,
  img_same,
  ip_adapter_weight,
}: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  const prompt = text.replaceAll('，', ',');
  const negative_prompt = negative.replaceAll('，', ',');
  return {
    client_id: client_id,
    prompt: {
      '1': {
        inputs: { ckpt_name: ckpt },
        class_type: 'CheckpointLoaderSimple',
      },
      '3': {
        inputs: { ipadapter_file: ip_adapter },
        class_type: 'IPAdapterModelLoader',
      },
      '4': { inputs: { clip_name: 'SD1.5\\pytorch_model.bin' }, class_type: 'CLIPVisionLoader' },
      '5': {
        inputs: {
          weight: ip_adapter_weight,
          noise: 0,
          weight_type: 'original',
          start_at: 0,
          end_at: 1,
          unfold_batch: false,
          ipadapter: ['3', 0],
          clip_vision: ['4', 0],
          image: ['6', 0],
          model: ['36', 0],
        },
        class_type: 'IPAdapterApply',
      },
      '6': { inputs: { image: style_img, upload: 'image' }, class_type: 'LoadImage' },
      '7': { inputs: { text: prompt, clip: ['36', 1] }, class_type: 'CLIPTextEncode' },
      '8': { inputs: { text: negative_prompt, clip: ['36', 1] }, class_type: 'CLIPTextEncode' },
      '9': {
        inputs: {
          seed: input_seed,
          steps: 6,
          cfg: 1.5,
          sampler_name: 'lcm',
          scheduler: 'ddim_uniform',
          denoise: 1,
          model: ['5', 0],
          positive: ['26', 0],
          negative: ['8', 0],
          latent_image: ['19', 0],
        },
        class_type: 'KSampler',
      },
      '11': { inputs: { samples: ['9', 0], vae: ['1', 2] }, class_type: 'VAEDecode' },
      '14': { inputs: { image: load_img, upload: 'image' }, class_type: 'LoadImage' },
      '15': {
        inputs: { control_net_name: cn },
        class_type: 'ControlNetLoader',
      },
      '16': {
        inputs: { strength: 0.5, conditioning: ['7', 0], control_net: ['15', 0], image: ['21', 0] },
        class_type: 'ControlNetApply',
      },
      '17': { inputs: { images: ['21', 0] }, class_type: 'PreviewImage' },
      '18': {
        inputs: {
          lora_name: 'lcm-lora-sdv1-5.safetensors',
          strength_model: 1,
          strength_clip: 1,
          model: ['1', 0],
          clip: ['1', 1],
        },
        class_type: 'LoraLoader',
      },
      '19': { inputs: { pixels: ['21', 0], vae: ['1', 2] }, class_type: 'VAEEncode' },
      '21': {
        inputs: { score_threshold: 0.1, dist_threshold: 0.1, resolution: 512, image: ['14', 0] },
        class_type: 'M-LSDPreprocessor',
      },
      '23': {
        inputs: { control_net_name: 'control_v11p_sd15_seg.pth' },
        class_type: 'ControlNetLoader',
      },
      '24': {
        inputs: { resolution: 512, image: ['14', 0] },
        class_type: 'OneFormer-COCO-SemSegPreprocessor',
      },
      '25': { inputs: { images: ['24', 0] }, class_type: 'PreviewImage' },
      '26': {
        inputs: {
          strength: img_same,
          conditioning: ['16', 0],
          control_net: ['23', 0],
          image: ['14', 0],
        },
        class_type: 'ControlNetApply',
      },
      '28': { inputs: { filename_prefix: 'Eva_HD', images: ['37', 0] }, class_type: 'SaveImage' },
      '36': {
        inputs: {
          lora_name: lora,
          strength_model: 1,
          strength_clip: 1,
          model: ['18', 0],
          clip: ['18', 1],
        },
        class_type: 'LoraLoader',
      },
      '37': {
        inputs: {
          upscale_model: '8x_eva_super.pth',
          mode: 'rescale',
          rescale_factor: 2,
          resize_width: 1024,
          resampling_method: 'lanczos',
          supersample: 'true',
          rounding_modulus: 8,
          image: ['11', 0],
        },
        class_type: 'CR Upscale Image',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 38,
          last_link_id: 75,
          nodes: [
            {
              id: 19,
              type: 'VAEEncode',
              pos: [955, 532],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 12,
              mode: 0,
              inputs: [
                { name: 'pixels', type: 'IMAGE', link: 75 },
                { name: 'vae', type: 'VAE', link: 28 },
              ],
              outputs: [{ name: 'LATENT', type: 'LATENT', links: [26], shape: 3 }],
              properties: { 'Node name for S&R': 'VAEEncode' },
            },
            {
              id: 16,
              type: 'ControlNetApply',
              pos: [542, 750],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 17,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 16, label: t('条件') },
                { name: 'control_net', type: 'CONTROL_NET', link: 15, label: 'ControlNet' },
                { name: 'image', type: 'IMAGE', link: 32, label: t('图像'), slot_index: 2 },
              ],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [41],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [0.5],
            },
            {
              id: 24,
              type: 'OneFormer-COCO-SemSegPreprocessor',
              pos: [579, 1222],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 9,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 39 }],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [40], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'OneFormer-COCO-SemSegPreprocessor' },
              widgets_values: [512],
            },
            {
              id: 25,
              type: 'PreviewImage',
              pos: [589, 1340],
              size: { '0': 313.5618591308594, '1': 246 },
              flags: {},
              order: 13,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 40 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 17,
              type: 'PreviewImage',
              pos: [218, 1093],
              size: { '0': 210, '1': 246 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 30, label: t('图像'), slot_index: 0 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 15,
              type: 'ControlNetLoader',
              pos: [190, 750],
              size: { '0': 310, '1': 60 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                {
                  name: 'CONTROL_NET',
                  type: 'CONTROL_NET',
                  links: [15],
                  shape: 3,
                  slot_index: 0,
                  label: 'ControlNet',
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: [cn],
            },
            {
              id: 3,
              type: 'IPAdapterModelLoader',
              pos: [176, -65],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                {
                  name: 'IPADAPTER',
                  type: 'IPADAPTER',
                  links: [1],
                  shape: 3,
                  slot_index: 0,
                  label: t('IP适配'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterModelLoader' },
              widgets_values: [ip_adapter],
            },
            {
              id: 4,
              type: 'CLIPVisionLoader',
              pos: [183, 44],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [
                {
                  name: 'CLIP_VISION',
                  type: 'CLIP_VISION',
                  links: [2],
                  shape: 3,
                  slot_index: 0,
                  label: t('CLIP视觉'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPVisionLoader' },
              widgets_values: ['SD1.5\\pytorch_model.bin'],
            },
            {
              id: 1,
              type: 'CheckpointLoaderSimple',
              pos: [181, 159],
              size: { '0': 300, '1': 100 },
              flags: {},
              order: 3,
              mode: 0,
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [21],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
                { name: 'CLIP', type: 'CLIP', links: [22], shape: 3, slot_index: 1, label: 'CLIP' },
                {
                  name: 'VAE',
                  type: 'VAE',
                  links: [20, 28],
                  shape: 3,
                  label: 'VAE',
                  slot_index: 2,
                },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: [ckpt],
            },
            {
              id: 18,
              type: 'LoraLoader',
              pos: [178, 306],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 7,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 21 },
                { name: 'clip', type: 'CLIP', link: 22 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [68], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [69], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['lcm-lora-sdv1-5.safetensors', 1, 1],
            },
            {
              id: 7,
              type: 'CLIPTextEncode',
              pos: [650, 250],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 15,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 71, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [16],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [prompt],
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 23,
              type: 'ControlNetLoader',
              pos: [588, 1090],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 4,
              mode: 0,
              outputs: [{ name: 'CONTROL_NET', type: 'CONTROL_NET', links: [42], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11p_sd15_seg.pth'],
            },
            {
              id: 11,
              type: 'VAEDecode',
              pos: [1300, 170],
              size: { '0': 140, '1': 50 },
              flags: {},
              order: 20,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 11, label: 'Latent' },
                { name: 'vae', type: 'VAE', link: 20, label: 'VAE' },
              ],
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [13, 73],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
              ],
              properties: { 'Node name for S&R': 'VAEDecode' },
            },
            {
              id: 6,
              type: 'LoadImage',
              pos: [972, 675],
              size: { '0': 453.823486328125, '1': 476.8275146484375 },
              flags: {},
              order: 5,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [3],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [style_img, 'image'],
            },
            {
              id: 21,
              type: 'M-LSDPreprocessor',
              pos: [202, 888],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 31 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [30, 32, 75], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'M-LSDPreprocessor' },
              widgets_values: [0.1, 0.1, 512],
            },
            {
              id: 9,
              type: 'KSampler',
              pos: [937, 167],
              size: { '0': 315, '1': 262 },
              flags: {},
              order: 19,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 7, label: t('模型') },
                { name: 'positive', type: 'CONDITIONING', link: 44, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 9, label: t('负面提示词') },
                { name: 'latent_image', type: 'LATENT', link: 26, label: 'Latent', slot_index: 3 },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [11],
                  shape: 3,
                  slot_index: 0,
                  label: 'Latent',
                },
              ],
              properties: { 'Node name for S&R': 'KSampler' },
              widgets_values: [input_seed, 'randomize', 6, 1.5, 'lcm', 'ddim_uniform', 1],
            },
            {
              id: 14,
              type: 'LoadImage',
              pos: [-1203, 684],
              size: [1269.9575277341032, 1007.8716232572551],
              flags: {},
              order: 6,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [31, 39, 43],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 8,
              type: 'CLIPTextEncode',
              pos: [650, 420],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 16,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 72, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [9],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [negative_prompt],
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 5,
              type: 'IPAdapterApply',
              pos: [655, -72],
              size: { '0': 210, '1': 258 },
              flags: {},
              order: 14,
              mode: 0,
              inputs: [
                { name: 'ipadapter', type: 'IPADAPTER', link: 1, label: t('IP适配') },
                { name: 'clip_vision', type: 'CLIP_VISION', link: 2, label: t('CLIP视觉') },
                { name: 'image', type: 'IMAGE', link: 3, label: t('图像') },
                { name: 'model', type: 'MODEL', link: 70, label: t('模型') },
                { name: 'attn_mask', type: 'MASK', link: null },
              ],
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [7],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterApply' },
              widgets_values: [ip_adapter_weight, 0, 'original', 0, 1, false],
            },
            {
              id: 26,
              type: 'ControlNetApply',
              pos: [580, 917],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 18,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 41 },
                { name: 'control_net', type: 'CONTROL_NET', link: 42 },
                { name: 'image', type: 'IMAGE', link: 43 },
              ],
              outputs: [{ name: 'CONDITIONING', type: 'CONDITIONING', links: [44], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [img_same],
            },
            {
              id: 37,
              type: 'CR Upscale Image',
              pos: [1633, 181],
              size: { '0': 315, '1': 222 },
              flags: {},
              order: 22,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 73 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [74], shape: 3, slot_index: 0 },
                { name: 'show_help', type: 'STRING', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'CR Upscale Image' },
              widgets_values: ['8x_eva_super.pth', 'rescale', 2, 1024, 'lanczos', 'true', 8],
            },
            {
              id: 12,
              type: 'SaveImage',
              pos: [1628, 602],
              size: { '0': 732.1408081054688, '1': 662.5580444335938 },
              flags: {},
              order: 21,
              mode: 4,
              inputs: [{ name: 'images', type: 'IMAGE', link: 13, label: t('图像') }],
              properties: {},
              widgets_values: ['Eva'],
            },
            {
              id: 36,
              type: 'LoraLoader',
              pos: [175, 501],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 10,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 68 },
                { name: 'clip', type: 'CLIP', link: 69 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [70], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [71, 72], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: [lora, 1, 1],
            },
            {
              id: 28,
              type: 'SaveImage',
              pos: [2430, 600],
              size: [1706.9963735591773, 956.3213885946411],
              flags: {},
              order: 23,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 74 }],
              properties: {},
              widgets_values: ['Eva_HD'],
            },
          ],
          links: [
            [1, 3, 0, 5, 0, 'IPADAPTER'],
            [2, 4, 0, 5, 1, 'CLIP_VISION'],
            [3, 6, 0, 5, 2, 'IMAGE'],
            [7, 5, 0, 9, 0, 'MODEL'],
            [9, 8, 0, 9, 2, 'CONDITIONING'],
            [11, 9, 0, 11, 0, 'LATENT'],
            [13, 11, 0, 12, 0, 'IMAGE'],
            [15, 15, 0, 16, 1, 'CONTROL_NET'],
            [16, 7, 0, 16, 0, 'CONDITIONING'],
            [20, 1, 2, 11, 1, 'VAE'],
            [21, 1, 0, 18, 0, 'MODEL'],
            [22, 1, 1, 18, 1, 'CLIP'],
            [26, 19, 0, 9, 3, 'LATENT'],
            [28, 1, 2, 19, 1, 'VAE'],
            [30, 21, 0, 17, 0, 'IMAGE'],
            [31, 14, 0, 21, 0, 'IMAGE'],
            [32, 21, 0, 16, 2, 'IMAGE'],
            [39, 14, 0, 24, 0, 'IMAGE'],
            [40, 24, 0, 25, 0, 'IMAGE'],
            [41, 16, 0, 26, 0, 'CONDITIONING'],
            [42, 23, 0, 26, 1, 'CONTROL_NET'],
            [43, 14, 0, 26, 2, 'IMAGE'],
            [44, 26, 0, 9, 1, 'CONDITIONING'],
            [68, 18, 0, 36, 0, 'MODEL'],
            [69, 18, 1, 36, 1, 'CLIP'],
            [70, 36, 0, 5, 3, 'MODEL'],
            [71, 36, 1, 7, 0, 'CLIP'],
            [72, 36, 1, 8, 0, 'CLIP'],
            [73, 11, 0, 37, 0, 'IMAGE'],
            [74, 37, 0, 28, 0, 'IMAGE'],
            [75, 21, 0, 19, 0, 'IMAGE'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};

export const fast_to_img_base_lora_4hd_512 = ({
  client_id,
  load_img,
  style_img,
  text,
  negative,
  ip_adapter,
  ckpt,
  lora,
  cn,
  img_same,
  ip_adapter_weight,
}: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  const prompt = text.replaceAll('，', ',');
  const negative_prompt = negative.replaceAll('，', ',');
  return {
    client_id: client_id,
    prompt: {
      '1': {
        inputs: { ckpt_name: ckpt },
        class_type: 'CheckpointLoaderSimple',
      },
      '3': {
        inputs: { ipadapter_file: ip_adapter },
        class_type: 'IPAdapterModelLoader',
      },
      '4': { inputs: { clip_name: 'SD1.5\\pytorch_model.bin' }, class_type: 'CLIPVisionLoader' },
      '5': {
        inputs: {
          weight: ip_adapter_weight,
          noise: 0,
          weight_type: 'original',
          start_at: 0,
          end_at: 1,
          unfold_batch: false,
          ipadapter: ['3', 0],
          clip_vision: ['4', 0],
          image: ['6', 0],
          model: ['36', 0],
        },
        class_type: 'IPAdapterApply',
      },
      '6': { inputs: { image: style_img, upload: 'image' }, class_type: 'LoadImage' },
      '7': { inputs: { text: prompt, clip: ['36', 1] }, class_type: 'CLIPTextEncode' },
      '8': { inputs: { text: negative_prompt, clip: ['36', 1] }, class_type: 'CLIPTextEncode' },
      '9': {
        inputs: {
          seed: input_seed,
          steps: 6,
          cfg: 1.5,
          sampler_name: 'lcm',
          scheduler: 'ddim_uniform',
          denoise: 1,
          model: ['5', 0],
          positive: ['26', 0],
          negative: ['8', 0],
          latent_image: ['19', 0],
        },
        class_type: 'KSampler',
      },
      '11': { inputs: { samples: ['9', 0], vae: ['1', 2] }, class_type: 'VAEDecode' },
      '14': { inputs: { image: load_img, upload: 'image' }, class_type: 'LoadImage' },
      '15': {
        inputs: { control_net_name: cn },
        class_type: 'ControlNetLoader',
      },
      '16': {
        inputs: { strength: 0.5, conditioning: ['7', 0], control_net: ['15', 0], image: ['21', 0] },
        class_type: 'ControlNetApply',
      },
      '17': { inputs: { images: ['21', 0] }, class_type: 'PreviewImage' },
      '18': {
        inputs: {
          lora_name: 'lcm-lora-sdv1-5.safetensors',
          strength_model: 1,
          strength_clip: 1,
          model: ['1', 0],
          clip: ['1', 1],
        },
        class_type: 'LoraLoader',
      },
      '19': { inputs: { pixels: ['21', 0], vae: ['1', 2] }, class_type: 'VAEEncode' },
      '21': {
        inputs: { score_threshold: 0.1, dist_threshold: 0.1, resolution: 512, image: ['14', 0] },
        class_type: 'M-LSDPreprocessor',
      },
      '23': {
        inputs: { control_net_name: 'control_v11p_sd15_seg.pth' },
        class_type: 'ControlNetLoader',
      },
      '24': {
        inputs: { resolution: 512, image: ['14', 0] },
        class_type: 'OneFormer-COCO-SemSegPreprocessor',
      },
      '25': { inputs: { images: ['24', 0] }, class_type: 'PreviewImage' },
      '26': {
        inputs: {
          strength: img_same,
          conditioning: ['16', 0],
          control_net: ['23', 0],
          image: ['14', 0],
        },
        class_type: 'ControlNetApply',
      },
      '28': { inputs: { filename_prefix: 'Eva_HD', images: ['37', 0] }, class_type: 'SaveImage' },
      '36': {
        inputs: {
          lora_name: lora,
          strength_model: 1,
          strength_clip: 1,
          model: ['18', 0],
          clip: ['18', 1],
        },
        class_type: 'LoraLoader',
      },
      '37': {
        inputs: {
          upscale_model: '8x_eva_super.pth',
          mode: 'rescale',
          rescale_factor: 4,
          resize_width: 1024,
          resampling_method: 'lanczos',
          supersample: 'true',
          rounding_modulus: 8,
          image: ['11', 0],
        },
        class_type: 'CR Upscale Image',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 38,
          last_link_id: 75,
          nodes: [
            {
              id: 19,
              type: 'VAEEncode',
              pos: [955, 532],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 12,
              mode: 0,
              inputs: [
                { name: 'pixels', type: 'IMAGE', link: 75 },
                { name: 'vae', type: 'VAE', link: 28 },
              ],
              outputs: [{ name: 'LATENT', type: 'LATENT', links: [26], shape: 3 }],
              properties: { 'Node name for S&R': 'VAEEncode' },
            },
            {
              id: 16,
              type: 'ControlNetApply',
              pos: [542, 750],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 17,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 16, label: t('条件') },
                { name: 'control_net', type: 'CONTROL_NET', link: 15, label: 'ControlNet' },
                { name: 'image', type: 'IMAGE', link: 32, label: t('图像'), slot_index: 2 },
              ],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [41],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [0.5],
            },
            {
              id: 24,
              type: 'OneFormer-COCO-SemSegPreprocessor',
              pos: [579, 1222],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 9,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 39 }],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [40], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'OneFormer-COCO-SemSegPreprocessor' },
              widgets_values: [512],
            },
            {
              id: 25,
              type: 'PreviewImage',
              pos: [589, 1340],
              size: { '0': 313.5618591308594, '1': 246 },
              flags: {},
              order: 13,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 40 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 17,
              type: 'PreviewImage',
              pos: [218, 1093],
              size: { '0': 210, '1': 246 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 30, label: t('图像'), slot_index: 0 }],
              properties: { 'Node name for S&R': 'PreviewImage' },
            },
            {
              id: 15,
              type: 'ControlNetLoader',
              pos: [190, 750],
              size: { '0': 310, '1': 60 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                {
                  name: 'CONTROL_NET',
                  type: 'CONTROL_NET',
                  links: [15],
                  shape: 3,
                  slot_index: 0,
                  label: 'ControlNet',
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: [cn],
            },
            {
              id: 3,
              type: 'IPAdapterModelLoader',
              pos: [176, -65],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                {
                  name: 'IPADAPTER',
                  type: 'IPADAPTER',
                  links: [1],
                  shape: 3,
                  slot_index: 0,
                  label: t('IP适配'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterModelLoader' },
              widgets_values: [ip_adapter],
            },
            {
              id: 4,
              type: 'CLIPVisionLoader',
              pos: [183, 44],
              size: { '0': 300, '1': 60 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [
                {
                  name: 'CLIP_VISION',
                  type: 'CLIP_VISION',
                  links: [2],
                  shape: 3,
                  slot_index: 0,
                  label: t('CLIP视觉'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPVisionLoader' },
              widgets_values: ['SD1.5\\pytorch_model.bin'],
            },
            {
              id: 1,
              type: 'CheckpointLoaderSimple',
              pos: [181, 159],
              size: { '0': 300, '1': 100 },
              flags: {},
              order: 3,
              mode: 0,
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [21],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
                { name: 'CLIP', type: 'CLIP', links: [22], shape: 3, slot_index: 1, label: 'CLIP' },
                {
                  name: 'VAE',
                  type: 'VAE',
                  links: [20, 28],
                  shape: 3,
                  label: 'VAE',
                  slot_index: 2,
                },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: [ckpt],
            },
            {
              id: 18,
              type: 'LoraLoader',
              pos: [178, 306],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 7,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 21 },
                { name: 'clip', type: 'CLIP', link: 22 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [68], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [69], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['lcm-lora-sdv1-5.safetensors', 1, 1],
            },
            {
              id: 7,
              type: 'CLIPTextEncode',
              pos: [650, 250],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 15,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 71, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [16],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [prompt],
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 23,
              type: 'ControlNetLoader',
              pos: [588, 1090],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 4,
              mode: 0,
              outputs: [{ name: 'CONTROL_NET', type: 'CONTROL_NET', links: [42], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11p_sd15_seg.pth'],
            },
            {
              id: 11,
              type: 'VAEDecode',
              pos: [1300, 170],
              size: { '0': 140, '1': 50 },
              flags: {},
              order: 20,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 11, label: 'Latent' },
                { name: 'vae', type: 'VAE', link: 20, label: 'VAE' },
              ],
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [13, 73],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
              ],
              properties: { 'Node name for S&R': 'VAEDecode' },
            },
            {
              id: 6,
              type: 'LoadImage',
              pos: [972, 675],
              size: { '0': 453.823486328125, '1': 476.8275146484375 },
              flags: {},
              order: 5,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [3],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [style_img, 'image'],
            },
            {
              id: 21,
              type: 'M-LSDPreprocessor',
              pos: [202, 888],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 31 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [30, 32, 75], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'M-LSDPreprocessor' },
              widgets_values: [0.1, 0.1, 512],
            },
            {
              id: 9,
              type: 'KSampler',
              pos: [937, 167],
              size: { '0': 315, '1': 262 },
              flags: {},
              order: 19,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 7, label: t('模型') },
                { name: 'positive', type: 'CONDITIONING', link: 44, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 9, label: t('负面提示词') },
                { name: 'latent_image', type: 'LATENT', link: 26, label: 'Latent', slot_index: 3 },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [11],
                  shape: 3,
                  slot_index: 0,
                  label: 'Latent',
                },
              ],
              properties: { 'Node name for S&R': 'KSampler' },
              widgets_values: [input_seed, 'randomize', 6, 1.5, 'lcm', 'ddim_uniform', 1],
            },
            {
              id: 14,
              type: 'LoadImage',
              pos: [-1203, 684],
              size: [1269.9575277341032, 1007.8716232572551],
              flags: {},
              order: 6,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [31, 39, 43],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 8,
              type: 'CLIPTextEncode',
              pos: [650, 420],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 16,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 72, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [9],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [negative_prompt],
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 5,
              type: 'IPAdapterApply',
              pos: [655, -72],
              size: { '0': 210, '1': 258 },
              flags: {},
              order: 14,
              mode: 0,
              inputs: [
                { name: 'ipadapter', type: 'IPADAPTER', link: 1, label: t('IP适配') },
                { name: 'clip_vision', type: 'CLIP_VISION', link: 2, label: t('CLIP视觉') },
                { name: 'image', type: 'IMAGE', link: 3, label: t('图像') },
                { name: 'model', type: 'MODEL', link: 70, label: t('模型') },
                { name: 'attn_mask', type: 'MASK', link: null },
              ],
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [7],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterApply' },
              widgets_values: [ip_adapter_weight, 0, 'original', 0, 1, false],
            },
            {
              id: 26,
              type: 'ControlNetApply',
              pos: [580, 917],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 18,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 41 },
                { name: 'control_net', type: 'CONTROL_NET', link: 42 },
                { name: 'image', type: 'IMAGE', link: 43 },
              ],
              outputs: [{ name: 'CONDITIONING', type: 'CONDITIONING', links: [44], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [img_same],
            },
            {
              id: 37,
              type: 'CR Upscale Image',
              pos: [1633, 181],
              size: { '0': 315, '1': 222 },
              flags: {},
              order: 22,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 73 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [74], shape: 3, slot_index: 0 },
                { name: 'show_help', type: 'STRING', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'CR Upscale Image' },
              widgets_values: ['8x_eva_super.pth', 'rescale', 4, 1024, 'lanczos', 'true', 8],
            },
            {
              id: 12,
              type: 'SaveImage',
              pos: [1628, 602],
              size: { '0': 732.1408081054688, '1': 662.5580444335938 },
              flags: {},
              order: 21,
              mode: 4,
              inputs: [{ name: 'images', type: 'IMAGE', link: 13, label: t('图像') }],
              properties: {},
              widgets_values: ['Eva'],
            },
            {
              id: 36,
              type: 'LoraLoader',
              pos: [175, 501],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 10,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 68 },
                { name: 'clip', type: 'CLIP', link: 69 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [70], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [71, 72], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: [lora, 1, 1],
            },
            {
              id: 28,
              type: 'SaveImage',
              pos: [2430, 600],
              size: [1706.9963735591773, 956.3213885946411],
              flags: {},
              order: 23,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 74 }],
              properties: {},
              widgets_values: ['Eva_HD'],
            },
          ],
          links: [
            [1, 3, 0, 5, 0, 'IPADAPTER'],
            [2, 4, 0, 5, 1, 'CLIP_VISION'],
            [3, 6, 0, 5, 2, 'IMAGE'],
            [7, 5, 0, 9, 0, 'MODEL'],
            [9, 8, 0, 9, 2, 'CONDITIONING'],
            [11, 9, 0, 11, 0, 'LATENT'],
            [13, 11, 0, 12, 0, 'IMAGE'],
            [15, 15, 0, 16, 1, 'CONTROL_NET'],
            [16, 7, 0, 16, 0, 'CONDITIONING'],
            [20, 1, 2, 11, 1, 'VAE'],
            [21, 1, 0, 18, 0, 'MODEL'],
            [22, 1, 1, 18, 1, 'CLIP'],
            [26, 19, 0, 9, 3, 'LATENT'],
            [28, 1, 2, 19, 1, 'VAE'],
            [30, 21, 0, 17, 0, 'IMAGE'],
            [31, 14, 0, 21, 0, 'IMAGE'],
            [32, 21, 0, 16, 2, 'IMAGE'],
            [39, 14, 0, 24, 0, 'IMAGE'],
            [40, 24, 0, 25, 0, 'IMAGE'],
            [41, 16, 0, 26, 0, 'CONDITIONING'],
            [42, 23, 0, 26, 1, 'CONTROL_NET'],
            [43, 14, 0, 26, 2, 'IMAGE'],
            [44, 26, 0, 9, 1, 'CONDITIONING'],
            [68, 18, 0, 36, 0, 'MODEL'],
            [69, 18, 1, 36, 1, 'CLIP'],
            [70, 36, 0, 5, 3, 'MODEL'],
            [71, 36, 1, 7, 0, 'CLIP'],
            [72, 36, 1, 8, 0, 'CLIP'],
            [73, 11, 0, 37, 0, 'IMAGE'],
            [74, 37, 0, 28, 0, 'IMAGE'],
            [75, 21, 0, 19, 0, 'IMAGE'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};

export const colorFlatPicture = ({
  client_id,
  load_img,
  loras,
  loras_strength,
  prompt,
  prompt2,
  steps,
  cfg,
  sampler_name,
  shink,
  smagnify,
}: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  return {
    client_id: client_id,
    prompt: {
      '1': {
        inputs: { ckpt_name: 'Eva_AI.safetensors' },
        class_type: 'CheckpointLoaderSimple',
      },
      '7': {
        inputs: {
          text: prompt,
          clip: ['36', 1],
        },
        class_type: 'CLIPTextEncode',
      },
      '8': {
        inputs: {
          text: prompt2,
          clip: ['36', 1],
        },
        class_type: 'CLIPTextEncode',
      },
      '9': {
        inputs: {
          seed: input_seed,
          steps: steps,
          cfg: cfg,
          sampler_name: sampler_name,
          scheduler: 'ddim_uniform',
          denoise: 1,
          model: ['36', 0],
          positive: ['50', 0],
          negative: ['50', 1],
          latent_image: ['19', 0],
        },
        class_type: 'KSampler',
      },
      '11': { inputs: { samples: ['9', 0], vae: ['1', 2] }, class_type: 'VAEDecode' },
      '12': { inputs: { filename_prefix: 'Eva_CAD', images: ['48', 0] }, class_type: 'SaveImage' },
      '14': { inputs: { image: load_img, upload: 'image' }, class_type: 'LoadImage' },
      '15': {
        inputs: { control_net_name: 'control_v11p_sd15_canny.pth' },
        class_type: 'ControlNetLoader',
      },
      '19': { inputs: { pixels: ['51', 0], vae: ['1', 2] }, class_type: 'VAEEncode' },
      '36': {
        inputs: {
          lora_name: loras,
          strength_model: loras_strength,
          strength_clip: 0.2,
          model: ['1', 0],
          clip: ['1', 1],
        },
        class_type: 'LoraLoader',
      },
      '47': {
        inputs: {
          upscale_model: '8x_eva_super.pth',
          mode: 'rescale',
          rescale_factor: shink,
          resize_width: 1024,
          resampling_method: 'lanczos',
          supersample: 'true',
          rounding_modulus: 8,
          image: ['14', 0],
        },
        class_type: 'CR Upscale Image',
      },
      '48': {
        inputs: {
          upscale_model: '8x_eva_super.pth',
          mode: 'rescale',
          rescale_factor: smagnify,
          resize_width: 1024,
          resampling_method: 'lanczos',
          supersample: 'true',
          rounding_modulus: 8,
          image: ['11', 0],
        },
        class_type: 'CR Upscale Image',
      },
      '50': {
        inputs: {
          strength: 0.9,
          start_percent: 0,
          end_percent: 1,
          positive: ['7', 0],
          negative: ['8', 0],
          control_net: ['15', 0],
          image: ['51', 0],
        },
        class_type: 'ControlNetApplyAdvanced',
      },
      '51': {
        inputs: { low_threshold: 0.4, high_threshold: 0.8, image: ['47', 0] },
        class_type: 'Canny',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 51,
          last_link_id: 117,
          nodes: [
            {
              id: 19,
              type: 'VAEEncode',
              pos: [955, 532],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [
                { name: 'pixels', type: 'IMAGE', link: 114 },
                { name: 'vae', type: 'VAE', link: 28 },
              ],
              outputs: [{ name: 'LATENT', type: 'LATENT', links: [26], shape: 3 }],
              properties: { 'Node name for S&R': 'VAEEncode' },
            },
            {
              id: 12,
              type: 'SaveImage',
              pos: [1628, 602],
              size: { '0': 732.1408081054688, '1': 662.5580444335938 },
              flags: {},
              order: 13,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 98, label: t('图像') }],
              properties: {},
              widgets_values: ['Eva_CAD'],
            },
            {
              id: 14,
              type: 'LoadImage',
              pos: [1030, 1001],
              size: { '0': 421.0679016113281, '1': 552.5499877929688 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [95],
                  shape: 3,
                  slot_index: 0,
                  label: '图像',
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 11,
              type: 'VAEDecode',
              pos: [1300, 170],
              size: { '0': 140, '1': 50 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 11, label: 'Latent' },
                { name: 'vae', type: 'VAE', link: 20, label: 'VAE' },
              ],
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [97],
                  shape: 3,
                  slot_index: 0,
                  label: t('图像'),
                },
              ],
              properties: { 'Node name for S&R': 'VAEDecode' },
            },
            {
              id: 48,
              type: 'CR Upscale Image',
              pos: [1679, 217],
              size: { '0': 315, '1': 222 },
              flags: {},
              order: 12,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 97 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [98], shape: 3, slot_index: 0 },
                { name: 'show_help', type: 'STRING', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'CR Upscale Image' },
              widgets_values: ['8x_eva_super.pth', 'rescale', smagnify, 1024, 'lanczos', 'true', 8],
            },
            {
              id: 50,
              type: 'ControlNetApplyAdvanced',
              pos: [548, 703],
              size: { '0': 315, '1': 166 },
              flags: {},
              order: 9,
              mode: 0,
              inputs: [
                { name: 'positive', type: 'CONDITIONING', link: 108 },
                { name: 'negative', type: 'CONDITIONING', link: 109 },
                { name: 'control_net', type: 'CONTROL_NET', link: 104 },
                { name: 'image', type: 'IMAGE', link: 113 },
              ],
              outputs: [
                { name: 'positive', type: 'CONDITIONING', links: [110], shape: 3, slot_index: 0 },
                { name: 'negative', type: 'CONDITIONING', links: [111], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'ControlNetApplyAdvanced' },
              widgets_values: [0.8, 0, 1],
            },
            {
              id: 15,
              type: 'ControlNetLoader',
              pos: [168, 734],
              size: { '0': 310, '1': 60 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                {
                  name: 'CONTROL_NET',
                  type: 'CONTROL_NET',
                  links: [104],
                  shape: 3,
                  slot_index: 0,
                  label: 'ControlNet',
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11p_sd15_canny.pth'],
            },
            {
              id: 51,
              type: 'Canny',
              pos: [168, 880],
              size: { '0': 315, '1': 82 },
              flags: {},
              order: 5,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 112 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [113, 114], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'Canny' },
              widgets_values: [0.4, 0.8],
            },
            {
              id: 7,
              type: 'CLIPTextEncode',
              pos: [650, 250],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 7,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 107, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [108],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [prompt],
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 8,
              type: 'CLIPTextEncode',
              pos: [650, 420],
              size: { '0': 210, '1': 120 },
              flags: {},
              order: 6,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 106, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [109],
                  shape: 3,
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [prompt2],
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 9,
              type: 'KSampler',
              pos: [937, 167],
              size: { '0': 315, '1': 262 },
              flags: {},
              order: 10,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 117, label: t('模型') },
                { name: 'positive', type: 'CONDITIONING', link: 110, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 111, label: t('负面提示词') },
                { name: 'latent_image', type: 'LATENT', link: 26, label: 'Latent', slot_index: 3 },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [11],
                  shape: 3,
                  slot_index: 0,
                  label: 'Latent',
                },
              ],
              properties: { 'Node name for S&R': 'KSampler' },
              widgets_values: [
                input_seed,
                'randomize',
                steps,
                cfg,
                sampler_name,
                'ddim_uniform',
                1,
              ],
            },
            {
              id: 1,
              type: 'CheckpointLoaderSimple',
              pos: [172, 149],
              size: { '0': 300, '1': 100 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [115],
                  shape: 3,
                  slot_index: 0,
                  label: t('模型'),
                },
                {
                  name: 'CLIP',
                  type: 'CLIP',
                  links: [116],
                  shape: 3,
                  slot_index: 1,
                  label: 'CLIP',
                },
                {
                  name: 'VAE',
                  type: 'VAE',
                  links: [20, 28],
                  shape: 3,
                  label: 'VAE',
                  slot_index: 2,
                },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: ['Eva_AI.safetensors'],
            },
            {
              id: 36,
              type: 'LoraLoader',
              pos: [195, 521],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 4,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 115 },
                { name: 'clip', type: 'CLIP', link: 116 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [117], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [106, 107], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: [loras, loras_strength, 0.2],
            },
            {
              id: 47,
              type: 'CR Upscale Image',
              pos: [1074, 686],
              size: { '0': 315, '1': 222 },
              flags: {},
              order: 3,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 95 }],
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [112], shape: 3, slot_index: 0 },
                { name: 'show_help', type: 'STRING', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'CR Upscale Image' },
              widgets_values: ['8x_eva_super.pth', 'rescale', shink, 1024, 'lanczos', 'true', 8],
            },
          ],
          links: [
            [11, 9, 0, 11, 0, 'LATENT'],
            [20, 1, 2, 11, 1, 'VAE'],
            [26, 19, 0, 9, 3, 'LATENT'],
            [28, 1, 2, 19, 1, 'VAE'],
            [95, 14, 0, 47, 0, 'IMAGE'],
            [97, 11, 0, 48, 0, 'IMAGE'],
            [98, 48, 0, 12, 0, 'IMAGE'],
            [104, 15, 0, 50, 2, 'CONTROL_NET'],
            [106, 36, 1, 8, 0, 'CLIP'],
            [107, 36, 1, 7, 0, 'CLIP'],
            [108, 7, 0, 50, 0, 'CONDITIONING'],
            [109, 8, 0, 50, 1, 'CONDITIONING'],
            [110, 50, 0, 9, 1, 'CONDITIONING'],
            [111, 50, 1, 9, 2, 'CONDITIONING'],
            [112, 47, 0, 51, 0, 'IMAGE'],
            [113, 51, 0, 50, 3, 'IMAGE'],
            [114, 51, 0, 19, 0, 'IMAGE'],
            [115, 1, 0, 36, 0, 'MODEL'],
            [116, 1, 1, 36, 1, 'CLIP'],
            [117, 36, 0, 9, 0, 'MODEL'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};

export const extendImg = ({ client_id, load_img, scale, width, height }: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  return {
    client_id: client_id,
    prompt: {
      '3': {
        inputs: {
          seed: input_seed,
          steps: 6,
          cfg: 1.6,
          sampler_name: 'euler',
          scheduler: 'normal',
          denoise: 1,
          model: ['77', 0],
          positive: ['71', 0],
          negative: ['71', 1],
          latent_image: ['65', 0],
        },
        class_type: 'KSampler',
      },
      '4': {
        inputs: { ckpt_name: 'Eva_AI.safetensors' },
        class_type: 'CheckpointLoaderSimple',
      },
      '6': {
        inputs: { text: '(best quality, masterpiece)，indoor, cats', clip: ['96', 1] },
        class_type: 'CLIPTextEncode',
      },
      '7': {
        inputs: {
          text: '(human)，EasyNegative，naked，nsfw，text，paintings, sketches, (worst quality:2), (low quality:2), (normal quality:2), lowres, normal quality, ((monochrome)), ((grayscale)), skin spots, acnes, skin blemishes, age spot, (outdoor:1.6), manboobs, backlight bad_prompt_version2 bad-hands-5, EasyNegative,worst quality,low quality,, (worst quality, low quality:1.4), (fuze:1.4), (worst quality:1.1), (low quality:1.4:1.1), lowres, bad anatomy, bad hands, text,(deformed:1.3),(malformed hands:1.4),(poorly drawn hands:1.4),(mutated fingers:1.4),(bad anatomy:1.3),(extra limbs:1.35),(poorly drawn face:1.4),(signature:1.2),(artist name:1.2),(watermark:1.2), bad-artist, bad-hands-5,((((wrong shoes, bad-shoes))))',
          clip: ['4', 1],
        },
        class_type: 'CLIPTextEncode',
      },
      '8': { inputs: { samples: ['3', 0], vae: ['4', 2] }, class_type: 'VAEDecode' },
      '9': { inputs: { filename_prefix: 'ComfyUI', images: ['8', 0] }, class_type: 'SaveImage' },
      '11': {
        inputs: { image: load_img, upload: 'image' },
        class_type: 'LoadImage',
      },
      '12': {
        inputs: {
          left: width / 2,
          top: height / 2,
          right: width / 2,
          bottom: height / 2,
          feathering: 25,
          image: ['11', 0],
        },
        class_type: 'ImagePadForOutpaint',
      },
      '52': {
        inputs: { control_net_name: 'control_v11p_sd15_inpaint.pth' },
        class_type: 'ControlNetLoader',
      },
      '53': { inputs: { image: ['12', 0], mask: ['12', 1] }, class_type: 'InpaintPreprocessor' },
      '60': { inputs: { pixels: ['12', 0], vae: ['4', 2] }, class_type: 'VAEEncode' },
      '65': { inputs: { samples: ['60', 0], mask: ['12', 1] }, class_type: 'SetLatentNoiseMask' },
      '71': {
        inputs: {
          strength: 1,
          start_percent: 0,
          end_percent: 1,
          positive: ['6', 0],
          negative: ['7', 0],
          control_net: ['52', 0],
          image: ['53', 0],
        },
        class_type: 'ControlNetApplyAdvanced',
      },
      '77': {
        inputs: {
          weight: 1,
          noise: 0,
          weight_type: 'original',
          start_at: 0,
          end_at: 1,
          unfold_batch: false,
          ipadapter: ['78', 0],
          clip_vision: ['79', 0],
          image: ['11', 0],
          model: ['96', 0],
        },
        class_type: 'IPAdapterApply',
      },
      '78': {
        inputs: { ipadapter_file: 'ip-adapter_sd15.bin' },
        class_type: 'IPAdapterModelLoader',
      },
      '79': { inputs: { clip_name: 'SD1.5\\pytorch_model.bin' }, class_type: 'CLIPVisionLoader' },
      '96': {
        inputs: {
          lora_name: 'lcm-lora-sdv1-5.safetensors',
          strength_model: 1,
          strength_clip: 1,
          model: ['4', 0],
          clip: ['4', 1],
        },
        class_type: 'LoraLoader',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 96,
          last_link_id: 174,
          nodes: [
            {
              id: 7,
              type: 'CLIPTextEncode',
              pos: [-953, 79],
              size: { '0': 425.27801513671875, '1': 180.6060791015625 },
              flags: {},
              order: 5,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 5, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [123],
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [
                '(human)，EasyNegative，naked，nsfw，text，paintings, sketches, (worst quality:2), (low quality:2), (normal quality:2), lowres, normal quality, ((monochrome)), ((grayscale)), skin spots, acnes, skin blemishes, age spot, (outdoor:1.6), manboobs, backlight bad_prompt_version2 bad-hands-5, EasyNegative,worst quality,low quality,, (worst quality, low quality:1.4), (fuze:1.4), (worst quality:1.1), (low quality:1.4:1.1), lowres, bad anatomy, bad hands, text,(deformed:1.3),(malformed hands:1.4),(poorly drawn hands:1.4),(mutated fingers:1.4),(bad anatomy:1.3),(extra limbs:1.35),(poorly drawn face:1.4),(signature:1.2),(artist name:1.2),(watermark:1.2), bad-artist, bad-hands-5,((((wrong shoes, bad-shoes))))',
              ],
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 69,
              type: 'Reroute',
              pos: [-481, -226],
              size: [140.8, 26],
              flags: {},
              order: 10,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 123 }],
              outputs: [
                { name: 'CONDITIONING', type: 'CONDITIONING', links: [124], slot_index: 0 },
              ],
              properties: { showOutputText: true, horizontal: false },
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 71,
              type: 'ControlNetApplyAdvanced',
              pos: [209, -129],
              size: { '0': 315, '1': 166 },
              flags: {},
              order: 25,
              mode: 0,
              inputs: [
                { name: 'positive', type: 'CONDITIONING', link: 127, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 126, label: t('负面提示词') },
                { name: 'control_net', type: 'CONTROL_NET', link: 128, label: 'ControlNet' },
                { name: 'image', type: 'IMAGE', link: 129, label: t('图像'), slot_index: 3 },
              ],
              outputs: [
                {
                  name: 'positive',
                  type: 'CONDITIONING',
                  links: [131],
                  shape: 3,
                  label: t('正面提示词'),
                  slot_index: 0,
                },
                {
                  name: 'negative',
                  type: 'CONDITIONING',
                  links: [132],
                  shape: 3,
                  label: t('负面提示词'),
                  slot_index: 1,
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetApplyAdvanced' },
              widgets_values: [1, 0, 1],
            },
            {
              id: 53,
              type: 'InpaintPreprocessor',
              pos: [-58, -20],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 13,
              mode: 0,
              inputs: [
                { name: 'image', type: 'IMAGE', link: 81, label: t('图像') },
                { name: 'mask', type: 'MASK', link: 82, label: t('遮罩') },
              ],
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [129],
                  shape: 3,
                  label: t('图像'),
                  slot_index: 0,
                },
              ],
              properties: { 'Node name for S&R': 'InpaintPreprocessor' },
            },
            {
              id: 70,
              type: 'Reroute',
              pos: [-69, -228],
              size: [140.8, 26],
              flags: {},
              order: 15,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 124 }],
              outputs: [
                { name: 'CONDITIONING', type: 'CONDITIONING', links: [126], slot_index: 0 },
              ],
              properties: { showOutputText: true, horizontal: false },
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 68,
              type: 'Reroute',
              pos: [-68, -268],
              size: [140.8, 26],
              flags: {},
              order: 24,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 121 }],
              outputs: [
                { name: 'CONDITIONING', type: 'CONDITIONING', links: [127], slot_index: 0 },
              ],
              properties: { showOutputText: true, horizontal: false },
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 81,
              type: 'Reroute',
              pos: [-16, -445],
              size: [82, 26],
              flags: {},
              order: 14,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 148 }],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [149], slot_index: 0 }],
              properties: { showOutputText: true, horizontal: false },
            },
            {
              id: 80,
              type: 'Reroute',
              pos: [-449, -436],
              size: [82, 26],
              flags: {},
              order: 9,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 146 }],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [148], slot_index: 0 }],
              properties: { showOutputText: true, horizontal: false },
            },
            {
              id: 66,
              type: 'Reroute',
              pos: [-481, -266],
              size: [140.8, 26],
              flags: {},
              order: 21,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 120 }],
              outputs: [
                { name: 'CONDITIONING', type: 'CONDITIONING', links: [121], slot_index: 0 },
              ],
              properties: { showOutputText: true, horizontal: false },
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 72,
              type: 'Reroute',
              pos: [-943, -308],
              size: [82, 26],
              flags: {},
              order: 16,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 167 }],
              outputs: [{ name: 'MODEL', type: 'MODEL', links: [134], slot_index: 0 }],
              properties: { showOutputText: true, horizontal: false },
              color: '#223',
              bgcolor: '#335',
            },
            {
              id: 12,
              type: 'ImagePadForOutpaint',
              pos: [-446, 21],
              size: { '0': 315, '1': 174 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 88, label: t('图像'), slot_index: 0 }],
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [81, 100],
                  shape: 3,
                  label: t('图像'),
                  slot_index: 0,
                },
                {
                  name: 'MASK',
                  type: 'MASK',
                  links: [82, 115],
                  shape: 3,
                  label: t('遮罩'),
                  slot_index: 1,
                },
              ],
              properties: { 'Node name for S&R': 'ImagePadForOutpaint' },
              widgets_values: [256, 0, 256, 0, 25],
            },
            {
              id: 8,
              type: 'VAEDecode',
              pos: [951, -90],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 27,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 7, label: 'Latent' },
                { name: 'vae', type: 'VAE', link: 140, label: 'VAE', slot_index: 1 },
              ],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [9], slot_index: 0, label: t('图像') }],
              properties: { 'Node name for S&R': 'VAEDecode' },
            },
            {
              id: 65,
              type: 'SetLatentNoiseMask',
              pos: [217, 82],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 22,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 114, label: 'Latent' },
                { name: 'mask', type: 'MASK', link: 115, label: t('遮罩'), slot_index: 1 },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [118],
                  shape: 3,
                  label: 'Latent',
                  slot_index: 0,
                },
              ],
              properties: { 'Node name for S&R': 'SetLatentNoiseMask' },
            },
            {
              id: 60,
              type: 'VAEEncode',
              pos: [-54, 143],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 18,
              mode: 0,
              inputs: [
                { name: 'pixels', type: 'IMAGE', link: 100, label: t('图像') },
                { name: 'vae', type: 'VAE', link: 138, label: 'VAE', slot_index: 1 },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [114],
                  shape: 3,
                  label: 'Latent',
                  slot_index: 0,
                },
              ],
              properties: { 'Node name for S&R': 'VAEEncode' },
            },
            {
              id: 74,
              type: 'Reroute',
              pos: [-951, 270],
              size: [75, 26],
              flags: {},
              order: 7,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 136 }],
              outputs: [{ name: 'VAE', type: 'VAE', links: [137], slot_index: 0 }],
              properties: { showOutputText: true, horizontal: false },
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 76,
              type: 'Reroute',
              pos: [753, 265],
              size: [75, 26],
              flags: {},
              order: 19,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 139 }],
              outputs: [{ name: 'VAE', type: 'VAE', links: [140], slot_index: 0 }],
              properties: { showOutputText: true, horizontal: false },
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 75,
              type: 'Reroute',
              pos: [-176, 269],
              size: [75, 26],
              flags: {},
              order: 12,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 137 }],
              outputs: [{ name: 'VAE', type: 'VAE', links: [138, 139], slot_index: 0 }],
              properties: { showOutputText: true, horizontal: false },
              color: '#322',
              bgcolor: '#533',
            },
            {
              id: 79,
              type: 'CLIPVisionLoader',
              pos: [-225.5998229980468, -524.5333679199221],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                {
                  name: 'CLIP_VISION',
                  type: 'CLIP_VISION',
                  links: [142],
                  shape: 3,
                  label: t('CLIP视觉'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPVisionLoader' },
              widgets_values: ['SD1.5\\pytorch_model.bin'],
            },
            {
              id: 9,
              type: 'SaveImage',
              pos: [-412, 404],
              size: { '0': 618.739013671875, '1': 467.9272155761719 },
              flags: {},
              order: 28,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 9, label: t('图像') }],
              properties: {},
              widgets_values: ['ComfyUI'],
            },
            {
              id: 77,
              type: 'IPAdapterApply',
              pos: [168.4001770019532, -555.533367919922],
              size: { '0': 315, '1': 258 },
              flags: {},
              order: 23,
              mode: 0,
              inputs: [
                {
                  name: 'ipadapter',
                  type: 'IPADAPTER',
                  link: 141,
                  label: 'ipadapter',
                  slot_index: 0,
                },
                {
                  name: 'clip_vision',
                  type: 'CLIP_VISION',
                  link: 142,
                  label: 'clip_vision',
                  slot_index: 1,
                },
                { name: 'image', type: 'IMAGE', link: 149, label: 'image' },
                { name: 'model', type: 'MODEL', link: 168, label: 'model' },
                { name: 'attn_mask', type: 'MASK', link: null },
              ],
              outputs: [
                {
                  name: 'MODEL',
                  type: 'MODEL',
                  links: [164],
                  shape: 3,
                  label: 'MODEL',
                  slot_index: 0,
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterApply' },
              widgets_values: [1, 0, 'original', 0, 1, false],
            },
            {
              id: 73,
              type: 'Reroute',
              pos: [-18, -311],
              size: [82, 26],
              flags: {},
              order: 20,
              mode: 0,
              inputs: [{ name: '', type: '*', link: 134 }],
              outputs: [{ name: 'MODEL', type: 'MODEL', links: [168], slot_index: 0 }],
              properties: { showOutputText: true, horizontal: false },
              color: '#223',
              bgcolor: '#335',
            },
            {
              id: 6,
              type: 'CLIPTextEncode',
              pos: [-961, -135],
              size: { '0': 422.84503173828125, '1': 164.31304931640625 },
              flags: {},
              order: 17,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 170, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [120],
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: ['(best quality, masterpiece)，indoor, cats'],
              color: '#232',
              bgcolor: '#353',
            },
            {
              id: 96,
              type: 'LoraLoader',
              pos: [-1458.3578657670455, -166.36926824396312],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 6,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 171 },
                { name: 'clip', type: 'CLIP', link: 172 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [173], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [174], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['lcm-lora-sdv1-5.safetensors', 1, 1],
            },
            {
              id: 3,
              type: 'KSampler',
              pos: [622, -104],
              size: { '0': 315, '1': 262 },
              flags: {},
              order: 26,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 164, label: t('模型') },
                { name: 'positive', type: 'CONDITIONING', link: 131, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 132, label: t('负面提示词') },
                { name: 'latent_image', type: 'LATENT', link: 118, label: 'Latent', slot_index: 3 },
              ],
              outputs: [
                { name: 'LATENT', type: 'LATENT', links: [7], slot_index: 0, label: 'Latent' },
              ],
              properties: { 'Node name for S&R': 'KSampler' },
              widgets_values: [input_seed, 'randomize', 6, 1.6, 'euler', 'normal', 1],
            },
            {
              id: 95,
              type: 'LoraLoader',
              pos: [-1456, -422],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 11,
              mode: 4,
              inputs: [
                { name: 'model', type: 'MODEL', link: 173 },
                { name: 'clip', type: 'CLIP', link: 174, slot_index: 1 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [167], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [170], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['CandyMagic-22.safetensors', 1, 1],
            },
            {
              id: 4,
              type: 'CheckpointLoaderSimple',
              pos: [-1422, 169],
              size: { '0': 326.3190002441406, '1': 98 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [171], slot_index: 0, label: t('模型') },
                { name: 'CLIP', type: 'CLIP', links: [5, 172], slot_index: 1, label: 'CLIP' },
                { name: 'VAE', type: 'VAE', links: [136], slot_index: 2, label: 'VAE' },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: ['Eva_AI.safetensors'],
            },
            {
              id: 11,
              type: 'LoadImage',
              pos: [-858, 419],
              size: { '0': 327.71380615234375, '1': 420.5533142089844 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [88, 146],
                  shape: 3,
                  label: t('图像'),
                  slot_index: 0,
                },
                { name: 'MASK', type: 'MASK', links: null, shape: 3, label: t('遮罩') },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 52,
              type: 'ControlNetLoader',
              pos: [-172, -136],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 3,
              mode: 0,
              outputs: [
                {
                  name: 'CONTROL_NET',
                  type: 'CONTROL_NET',
                  links: [128],
                  shape: 3,
                  label: 'ControlNet',
                  slot_index: 0,
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11p_sd15_inpaint.pth'],
            },
            {
              id: 78,
              type: 'IPAdapterModelLoader',
              pos: [-244.59982299804676, -642.5333679199221],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 4,
              mode: 0,
              outputs: [
                {
                  name: 'IPADAPTER',
                  type: 'IPADAPTER',
                  links: [141],
                  shape: 3,
                  label: 'IPADAPTER',
                },
              ],
              properties: { 'Node name for S&R': 'IPAdapterModelLoader' },
              widgets_values: ['ip-adapter_sd15.bin'],
            },
          ],
          links: [
            [5, 4, 1, 7, 0, 'CLIP'],
            [7, 3, 0, 8, 0, 'LATENT'],
            [9, 8, 0, 9, 0, 'IMAGE'],
            [81, 12, 0, 53, 0, 'IMAGE'],
            [82, 12, 1, 53, 1, 'MASK'],
            [88, 11, 0, 12, 0, 'IMAGE'],
            [100, 12, 0, 60, 0, 'IMAGE'],
            [114, 60, 0, 65, 0, 'LATENT'],
            [115, 12, 1, 65, 1, 'MASK'],
            [118, 65, 0, 3, 3, 'LATENT'],
            [120, 6, 0, 66, 0, '*'],
            [121, 66, 0, 68, 0, '*'],
            [123, 7, 0, 69, 0, '*'],
            [124, 69, 0, 70, 0, '*'],
            [126, 70, 0, 71, 1, 'CONDITIONING'],
            [127, 68, 0, 71, 0, 'CONDITIONING'],
            [128, 52, 0, 71, 2, 'CONTROL_NET'],
            [129, 53, 0, 71, 3, 'IMAGE'],
            [131, 71, 0, 3, 1, 'CONDITIONING'],
            [132, 71, 1, 3, 2, 'CONDITIONING'],
            [134, 72, 0, 73, 0, '*'],
            [136, 4, 2, 74, 0, '*'],
            [137, 74, 0, 75, 0, '*'],
            [138, 75, 0, 60, 1, 'VAE'],
            [139, 75, 0, 76, 0, '*'],
            [140, 76, 0, 8, 1, 'VAE'],
            [141, 78, 0, 77, 0, 'IPADAPTER'],
            [142, 79, 0, 77, 1, 'CLIP_VISION'],
            [146, 11, 0, 80, 0, '*'],
            [148, 80, 0, 81, 0, '*'],
            [149, 81, 0, 77, 2, 'IMAGE'],
            [164, 77, 0, 3, 0, 'MODEL'],
            [167, 95, 0, 72, 0, '*'],
            [168, 73, 0, 77, 3, 'MODEL'],
            [170, 95, 1, 6, 0, 'CLIP'],
            [171, 4, 0, 96, 0, 'MODEL'],
            [172, 4, 1, 96, 1, 'CLIP'],
            [173, 96, 0, 95, 0, 'MODEL'],
            [174, 96, 1, 95, 1, 'CLIP'],
          ],
          groups: [
            {
              title: t('ip-adapter 看情况使用'),
              bounding: [-271, -742, 910, 408],
              color: '#3f789e',
              font_size: 24,
            },
          ],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};

export const upscale = ({ client_id, load_img, scale, width, height }: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  let b = 2;
  let tile = 1024;
  if (scale === 8) {
    b = 4;
    tile = 1024;
  } else if (scale === 6) {
    b = 4;
    tile = 1024;
  } else if (scale === 4) {
    b = 3;
    tile = 1024;
  } else if (scale === 2) {
    b = 2;
    tile = 1024;
  }
  return {
    client_id: client_id,
    prompt: {
      '1': {
        inputs: { image: load_img, upload: 'image' },
        class_type: 'LoadImage',
      },
      '2': {
        inputs: { ckpt_name: 'Eva_AI.safetensors' },
        class_type: 'CheckpointLoaderSimple',
      },
      '3': {
        inputs: {
          upscale_by: ['7', 2],
          seed: input_seed,
          steps: 15,
          cfg: 7,
          sampler_name: 'euler_ancestral',
          scheduler: 'normal',
          denoise: 0.1,
          mode_type: 'Linear',
          tile_width: tile,
          tile_height: tile,
          mask_blur: 8,
          tile_padding: 32,
          seam_fix_mode: 'None',
          seam_fix_denoise: 1,
          seam_fix_width: 64,
          seam_fix_mask_blur: 8,
          seam_fix_padding: 16,
          force_uniform_tiles: true,
          tiled_decode: false,
          image: ['1', 0],
          model: ['17', 0],
          positive: ['19', 0],
          negative: ['5', 0],
          vae: ['2', 2],
          upscale_model: ['15', 0],
        },
        class_type: 'UltimateSDUpscale',
      },
      '4': { inputs: { text: '', clip: ['17', 1] }, class_type: 'CLIPTextEncode' },
      '5': { inputs: { text: '', clip: ['17', 1] }, class_type: 'CLIPTextEncode' },
      '7': {
        inputs: { desiredXSIZE: ['10', 0], desiredYSIZE: ['14', 0] },
        class_type: 'RecommendedResCalcSD15',
      },
      '9': { inputs: { image: ['1', 0] }, class_type: 'CM_NearestSDXLResolution' },
      '10': { inputs: { op: 'Mul', a: ['9', 0], b: b }, class_type: 'CM_IntBinaryOperation' },
      '14': { inputs: { op: 'Mul', a: ['9', 1], b: b }, class_type: 'CM_IntBinaryOperation' },
      '15': {
        inputs: { model_name: '8x_eva_super.pth' },
        class_type: 'UpscaleModelLoader',
      },
      '16': { inputs: { filename_prefix: 'ComfyUI', images: ['3', 0] }, class_type: 'SaveImage' },
      '17': {
        inputs: {
          lora_name: 'lcm-lora-sdv1-5.safetensors',
          strength_model: 1,
          strength_clip: 1,
          model: ['2', 0],
          clip: ['2', 1],
        },
        class_type: 'LoraLoader',
      },
      '18': {
        inputs: { control_net_name: 'control_v11f1e_sd15_tile.pth' },
        class_type: 'ControlNetLoader',
      },
      '19': {
        inputs: { strength: 0.25, conditioning: ['4', 0], control_net: ['18', 0], image: ['1', 0] },
        class_type: 'ControlNetApply',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 19,
          last_link_id: 27,
          nodes: [
            {
              id: 5,
              type: 'CLIPTextEncode',
              pos: [1891, 234],
              size: { '0': 400, '1': 200 },
              flags: { collapsed: true },
              order: 6,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 18 }],
              outputs: [
                { name: 'CONDITIONING', type: 'CONDITIONING', links: [7], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [''],
            },
            {
              id: 9,
              type: 'CM_NearestSDXLResolution',
              pos: [1795, 913],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 5,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 8 }],
              outputs: [
                { name: 'width', type: 'INT', links: [9], shape: 3, slot_index: 0 },
                { name: 'height', type: 'INT', links: [10], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'CM_NearestSDXLResolution' },
            },
            {
              id: 2,
              type: 'CheckpointLoaderSimple',
              pos: [1355, 577],
              size: { '0': 315, '1': 98 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [16], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [17], shape: 3, slot_index: 1 },
                { name: 'VAE', type: 'VAE', links: [2], shape: 3, slot_index: 2 },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: ['Eva_AI.safetensors'],
            },
            {
              id: 17,
              type: 'LoraLoader',
              pos: [2143, 410],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 4,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 16 },
                { name: 'clip', type: 'CLIP', link: 17 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [20], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [18, 19], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['lcm-lora-sdv1-5.safetensors', 1, 1],
            },
            {
              id: 4,
              type: 'CLIPTextEncode',
              pos: [1890, 165],
              size: { '0': 400, '1': 200 },
              flags: { collapsed: false },
              order: 7,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 19 }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [22],
                  shape: 3,
                  slot_index: 0,
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [''],
            },
            {
              id: 15,
              type: 'UpscaleModelLoader',
              pos: [3799, 860],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [{ name: 'UPSCALE_MODEL', type: 'UPSCALE_MODEL', links: [11], shape: 3 }],
              properties: { 'Node name for S&R': 'UpscaleModelLoader' },
              widgets_values: ['8x_eva_super.pth'],
            },
            {
              id: 7,
              type: 'RecommendedResCalcSD15',
              pos: [2658, 864],
              size: { '0': 319.20001220703125, '1': 162 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [
                { name: 'desiredXSIZE', type: 'INT', link: 14, widget: { name: 'desiredXSIZE' } },
                { name: 'desiredYSIZE', type: 'INT', link: 15, widget: { name: 'desiredYSIZE' } },
              ],
              outputs: [
                { name: 'recomm width', type: 'INT', links: null, shape: 3 },
                { name: 'recomm height', type: 'INT', links: null, shape: 3, slot_index: 1 },
                { name: 'upscale factor', type: 'FLOAT', links: [27], shape: 3, slot_index: 2 },
                { name: 'reverse upscale for 4x', type: 'FLOAT', links: null, shape: 3 },
                { name: 'reverse upscale for 2x', type: 'FLOAT', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'RecommendedResCalcSD15' },
              widgets_values: [768, 768],
            },
            {
              id: 3,
              type: 'UltimateSDUpscale',
              pos: [3388, 557],
              size: [315, 614],
              flags: {},
              order: 12,
              mode: 0,
              inputs: [
                { name: 'image', type: 'IMAGE', link: 3 },
                { name: 'model', type: 'MODEL', link: 20 },
                { name: 'positive', type: 'CONDITIONING', link: 23 },
                { name: 'negative', type: 'CONDITIONING', link: 7 },
                { name: 'vae', type: 'VAE', link: 2 },
                { name: 'upscale_model', type: 'UPSCALE_MODEL', link: 11, slot_index: 5 },
                { name: 'upscale_by', type: 'FLOAT', link: 27, widget: { name: 'upscale_by' } },
              ],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [12], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'UltimateSDUpscale' },
              widgets_values: [
                1,
                input_seed,
                'randomize',
                15,
                7,
                'euler_ancestral',
                'normal',
                0.1,
                'Linear',
                tile,
                tile,
                8,
                32,
                'None',
                1,
                64,
                8,
                16,
                true,
                false,
              ],
            },
            {
              id: 10,
              type: 'CM_IntBinaryOperation',
              pos: [2106, 879],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [{ name: 'a', type: 'INT', link: 9, widget: { name: 'a' } }],
              outputs: [{ name: 'INT', type: 'INT', links: [14], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'CM_IntBinaryOperation' },
              widgets_values: ['Mul', 0, b],
            },
            {
              id: 16,
              type: 'SaveImage',
              pos: [-1541, 720],
              size: [2419.168604265938, 2379.2666574762816],
              flags: {},
              order: 13,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 12 }],
              properties: {},
              widgets_values: ['ComfyUI'],
            },
            {
              id: 18,
              type: 'ControlNetLoader',
              pos: [2517, 104],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [
                { name: 'CONTROL_NET', type: 'CONTROL_NET', links: [21], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11f1e_sd15_tile.pth'],
            },
            {
              id: 19,
              type: 'ControlNetApply',
              pos: [2902, 108],
              size: { '0': 317.4000244140625, '1': 98 },
              flags: {},
              order: 10,
              mode: 0,
              inputs: [
                { name: 'conditioning', type: 'CONDITIONING', link: 22 },
                { name: 'control_net', type: 'CONTROL_NET', link: 21 },
                { name: 'image', type: 'IMAGE', link: 24 },
              ],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [23],
                  shape: 3,
                  slot_index: 0,
                },
              ],
              properties: { 'Node name for S&R': 'ControlNetApply' },
              widgets_values: [1],
            },
            {
              id: 1,
              type: 'LoadImage',
              pos: [1039, 932],
              size: [686.1786699678132, 773.992354566094],
              flags: {},
              order: 3,
              mode: 0,
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [3, 8, 24], shape: 3, slot_index: 0 },
                { name: 'MASK', type: 'MASK', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 14,
              type: 'CM_IntBinaryOperation',
              pos: [2110, 1055],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 9,
              mode: 0,
              inputs: [{ name: 'a', type: 'INT', link: 10, widget: { name: 'a' } }],
              outputs: [{ name: 'INT', type: 'INT', links: [15], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'CM_IntBinaryOperation' },
              widgets_values: ['Mul', 0, b],
            },
          ],
          links: [
            [2, 2, 2, 3, 4, 'VAE'],
            [3, 1, 0, 3, 0, 'IMAGE'],
            [7, 5, 0, 3, 3, 'CONDITIONING'],
            [8, 1, 0, 9, 0, 'IMAGE'],
            [9, 9, 0, 10, 0, 'INT'],
            [10, 9, 1, 14, 0, 'INT'],
            [11, 15, 0, 3, 5, 'UPSCALE_MODEL'],
            [12, 3, 0, 16, 0, 'IMAGE'],
            [14, 10, 0, 7, 0, 'INT'],
            [15, 14, 0, 7, 1, 'INT'],
            [16, 2, 0, 17, 0, 'MODEL'],
            [17, 2, 1, 17, 1, 'CLIP'],
            [18, 17, 1, 5, 0, 'CLIP'],
            [19, 17, 1, 4, 0, 'CLIP'],
            [20, 17, 0, 3, 1, 'MODEL'],
            [21, 18, 0, 19, 1, 'CONTROL_NET'],
            [22, 4, 0, 19, 0, 'CONDITIONING'],
            [23, 19, 0, 3, 2, 'CONDITIONING'],
            [24, 1, 0, 19, 2, 'IMAGE'],
            [27, 7, 2, 3, 6, 'FLOAT'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};

export const upscale2 = ({ client_id, load_img, scale, width, height }: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  let b = 2;
  let tile = 1024;
  if (scale === 8) {
    b = 4;
    tile = 1024;
  } else if (scale === 6) {
    b = 4;
    tile = 1024;
  } else if (scale === 4) {
    b = 3;
    tile = 1024;
  } else if (scale === 2) {
    b = 2;
    tile = 1024;
  }
  return {
    client_id: client_id,
    prompt: {
      '1': {
        inputs: { image: load_img, upload: 'image' },
        class_type: 'LoadImage',
      },
      '2': {
        inputs: { ckpt_name: 'Eva_AI.safetensors' },
        class_type: 'CheckpointLoaderSimple',
      },
      '3': {
        inputs: {
          upscale_by: 4,
          seed: input_seed,
          steps: 6,
          cfg: 1.6,
          sampler_name: 'lcm',
          scheduler: 'normal',
          denoise: 0.2,
          mode_type: 'Linear',
          tile_width: tile,
          tile_height: tile,
          mask_blur: 8,
          tile_padding: 32,
          seam_fix_mode: 'None',
          seam_fix_denoise: 1,
          seam_fix_width: 64,
          seam_fix_mask_blur: 8,
          seam_fix_padding: 16,
          force_uniform_tiles: true,
          tiled_decode: false,
          image: ['1', 0],
          model: ['17', 0],
          positive: ['4', 0],
          negative: ['5', 0],
          vae: ['2', 2],
          upscale_model: ['15', 0],
        },
        class_type: 'UltimateSDUpscale',
      },
      '4': { inputs: { text: '', clip: ['17', 1] }, class_type: 'CLIPTextEncode' },
      '5': { inputs: { text: '', clip: ['17', 1] }, class_type: 'CLIPTextEncode' },
      '9': { inputs: { image: ['1', 0] }, class_type: 'CM_NearestSDXLResolution' },
      '10': { inputs: { op: 'Mul', a: ['9', 0], b: b }, class_type: 'CM_IntBinaryOperation' },
      '14': { inputs: { op: 'Mul', a: ['9', 1], b: b }, class_type: 'CM_IntBinaryOperation' },
      '15': {
        inputs: { model_name: '8x_eva_super.pth' },
        class_type: 'UpscaleModelLoader',
      },
      '16': { inputs: { filename_prefix: 'ComfyUI', images: ['3', 0] }, class_type: 'SaveImage' },
      '17': {
        inputs: {
          lora_name: 'lcm-lora-sdv1-5.safetensors',
          strength_model: 1,
          strength_clip: 1,
          model: ['2', 0],
          clip: ['2', 1],
        },
        class_type: 'LoraLoader',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 17,
          last_link_id: 20,
          nodes: [
            {
              id: 5,
              type: 'CLIPTextEncode',
              pos: [1891, 234],
              size: { '0': 400, '1': 200 },
              flags: { collapsed: true },
              order: 7,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 18 }],
              outputs: [
                { name: 'CONDITIONING', type: 'CONDITIONING', links: [7], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [''],
            },
            {
              id: 9,
              type: 'CM_NearestSDXLResolution',
              pos: [1795, 913],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 3,
              mode: 0,
              inputs: [{ name: 'image', type: 'IMAGE', link: 8 }],
              outputs: [
                { name: 'width', type: 'INT', links: [9], shape: 3, slot_index: 0 },
                { name: 'height', type: 'INT', links: [10], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'CM_NearestSDXLResolution' },
            },
            {
              id: 10,
              type: 'CM_IntBinaryOperation',
              pos: [2106, 879],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 5,
              mode: 0,
              inputs: [{ name: 'a', type: 'INT', link: 9, widget: { name: 'a' } }],
              outputs: [{ name: 'INT', type: 'INT', links: [14], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'CM_IntBinaryOperation' },
              widgets_values: ['Mul', 0, 4],
            },
            {
              id: 14,
              type: 'CM_IntBinaryOperation',
              pos: [2101, 1054],
              size: { '0': 315, '1': 106 },
              flags: {},
              order: 6,
              mode: 0,
              inputs: [{ name: 'a', type: 'INT', link: 10, widget: { name: 'a' } }],
              outputs: [{ name: 'INT', type: 'INT', links: [15], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'CM_IntBinaryOperation' },
              widgets_values: ['Mul', 0, 4],
            },
            {
              id: 7,
              type: 'RecommendedResCalcSD15',
              pos: [2629, 856],
              size: { '0': 319.20001220703125, '1': 162 },
              flags: {},
              order: 9,
              mode: 4,
              inputs: [
                { name: 'desiredXSIZE', type: 'INT', link: 14, widget: { name: 'desiredXSIZE' } },
                { name: 'desiredYSIZE', type: 'INT', link: 15, widget: { name: 'desiredYSIZE' } },
              ],
              outputs: [
                { name: 'recomm width', type: 'INT', links: null, shape: 3 },
                { name: 'recomm height', type: 'INT', links: null, shape: 3 },
                { name: 'upscale factor', type: 'FLOAT', links: [], shape: 3, slot_index: 2 },
                { name: 'reverse upscale for 4x', type: 'FLOAT', links: null, shape: 3 },
                { name: 'reverse upscale for 2x', type: 'FLOAT', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'RecommendedResCalcSD15' },
              widgets_values: [768, 768],
            },
            {
              id: 17,
              type: 'LoraLoader',
              pos: [2143, 410],
              size: { '0': 315, '1': 126 },
              flags: {},
              order: 4,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 16 },
                { name: 'clip', type: 'CLIP', link: 17 },
              ],
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [20], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [18, 19], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoraLoader' },
              widgets_values: ['lcm-lora-sdv1-5.safetensors', 1, 1],
            },
            {
              id: 3,
              type: 'UltimateSDUpscale',
              pos: [3805, 547],
              size: { '0': 315, '1': 614 },
              flags: {},
              order: 10,
              mode: 0,
              inputs: [
                { name: 'image', type: 'IMAGE', link: 3 },
                { name: 'model', type: 'MODEL', link: 20 },
                { name: 'positive', type: 'CONDITIONING', link: 5 },
                { name: 'negative', type: 'CONDITIONING', link: 7 },
                { name: 'vae', type: 'VAE', link: 2 },
                { name: 'upscale_model', type: 'UPSCALE_MODEL', link: 11, slot_index: 5 },
              ],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [12], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'UltimateSDUpscale' },
              widgets_values: [
                4,
                input_seed,
                'randomize',
                6,
                1.6,
                'lcm',
                'normal',
                0.2,
                'Linear',
                tile,
                tile,
                8,
                32,
                'None',
                1,
                64,
                8,
                16,
                true,
                false,
              ],
            },
            {
              id: 16,
              type: 'SaveImage',
              pos: [4233, 512],
              size: { '0': 1254.1998291015625, '1': 1640.8204345703125 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 12 }],
              properties: {},
              widgets_values: ['ComfyUI'],
            },
            {
              id: 1,
              type: 'LoadImage',
              pos: [901, 814],
              size: { '0': 522.2883911132812, '1': 677.3435668945312 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [3, 8], shape: 3, slot_index: 0 },
                { name: 'MASK', type: 'MASK', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [load_img, 'image'],
            },
            {
              id: 2,
              type: 'CheckpointLoaderSimple',
              pos: [1355, 577],
              size: { '0': 315, '1': 98 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [16], shape: 3, slot_index: 0 },
                { name: 'CLIP', type: 'CLIP', links: [17], shape: 3, slot_index: 1 },
                { name: 'VAE', type: 'VAE', links: [2], shape: 3, slot_index: 2 },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: ['Eva_AI.safetensors'],
            },
            {
              id: 4,
              type: 'CLIPTextEncode',
              pos: [1890, 165],
              size: { '0': 400, '1': 200 },
              flags: { collapsed: true },
              order: 8,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 19 }],
              outputs: [
                { name: 'CONDITIONING', type: 'CONDITIONING', links: [5], shape: 3, slot_index: 0 },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [''],
            },
            {
              id: 15,
              type: 'UpscaleModelLoader',
              pos: [3215, 737],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [{ name: 'UPSCALE_MODEL', type: 'UPSCALE_MODEL', links: [11], shape: 3 }],
              properties: { 'Node name for S&R': 'UpscaleModelLoader' },
              widgets_values: ['8x_eva_super.pth'],
            },
          ],
          links: [
            [2, 2, 2, 3, 4, 'VAE'],
            [3, 1, 0, 3, 0, 'IMAGE'],
            [5, 4, 0, 3, 2, 'CONDITIONING'],
            [7, 5, 0, 3, 3, 'CONDITIONING'],
            [8, 1, 0, 9, 0, 'IMAGE'],
            [9, 9, 0, 10, 0, 'INT'],
            [10, 9, 1, 14, 0, 'INT'],
            [11, 15, 0, 3, 5, 'UPSCALE_MODEL'],
            [12, 3, 0, 16, 0, 'IMAGE'],
            [14, 10, 0, 7, 0, 'INT'],
            [15, 14, 0, 7, 1, 'INT'],
            [16, 2, 0, 17, 0, 'MODEL'],
            [17, 2, 1, 17, 1, 'CLIP'],
            [18, 17, 1, 5, 0, 'CLIP'],
            [19, 17, 1, 4, 0, 'CLIP'],
            [20, 17, 0, 3, 1, 'MODEL'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
        },
      },
    },
  };
};
