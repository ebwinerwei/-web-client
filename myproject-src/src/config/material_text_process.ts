import { t } from '@/utils/lang'
export const material_text_process = ({
  client_id,
  load_img,
  mask_img,
  material_img,
  text,
}: any) => {
  const input_seed = Math.floor(Math.random() * 1000000000000);
  const prompt = text.replaceAll('，', ',');
  console.log({
    client_id,
    load_img,
    mask_img,
    material_img,
    text,
    input_seed,
    prompt,
  });
  return {
    client_id: client_id,
    prompt: {
      '3': {
        inputs: {
          seed: input_seed,
          steps: 20,
          cfg: 6,
          sampler_name: 'dpmpp_sde',
          scheduler: 'simple',
          denoise: 0.8,
          model: ['4', 0],
          positive: ['26', 0],
          negative: ['26', 1],
          latent_image: ['12', 0],
        },
        class_type: 'KSampler',
      },
      '4': { inputs: { ckpt_name: 'Eva_AI.safetensors' }, class_type: 'CheckpointLoaderSimple' },
      '6': { inputs: { text: prompt, clip: ['4', 1] }, class_type: 'CLIPTextEncode' },
      '7': { inputs: { text: ['20', 0], clip: ['4', 1] }, class_type: 'CLIPTextEncode' },
      '8': { inputs: { samples: ['3', 0], vae: ['4', 2] }, class_type: 'VAEDecode' },
      '9': { inputs: { filename_prefix: 'ComfyUI', images: ['8', 0] }, class_type: 'SaveImage' },
      '10': {
        inputs: {
          image: `${mask_img} [input]`,
          upload: 'image',
        },
        class_type: 'LoadImage',
      },
      '12': {
        inputs: { grow_mask_by: 10, pixels: ['10', 0], vae: ['4', 2], mask: ['10', 1] },
        class_type: 'VAEEncodeForInpaint',
      },
      '20': {
        inputs: { embedding: 'EasyNegative.safetensors', emphasis: 0.85, append: false, text: '' },
        class_type: 'EmbeddingPicker',
      },
      '22': {
        inputs: { ipadapter_file: 'ip-adapter_sd15.bin' },
        class_type: 'IPAdapterModelLoader',
      },
      '23': { inputs: { clip_name: 'SD1.5\\pytorch_model.bin' }, class_type: 'CLIPVisionLoader' },
      '24': {
        inputs: { image: '893f5e5ef6f7661de8afa1067d235889.jpg', upload: 'image' },
        class_type: 'LoadImage',
      },
      '26': {
        inputs: {
          strength: 1,
          start_percent: 0,
          end_percent: 1,
          positive: ['6', 0],
          negative: ['7', 0],
          control_net: ['27', 0],
          image: ['10', 0],
        },
        class_type: 'ControlNetApplyAdvanced',
      },
      '27': {
        inputs: { control_net_name: 'control_v11p_sd15_normalbae.pth' },
        class_type: 'ControlNetLoader',
      },
    },
    extra_data: {
      extra_pnginfo: {
        workflow: {
          last_node_id: 27,
          last_link_id: 36,
          nodes: [
            {
              id: 8,
              type: 'VAEDecode',
              pos: [1209, 188],
              size: { '0': 210, '1': 46 },
              flags: {},
              order: 13,
              mode: 0,
              inputs: [
                { name: 'samples', type: 'LATENT', link: 7, label: 'Latent' },
                { name: 'vae', type: 'VAE', link: 8, label: 'VAE' },
              ],
              outputs: [{ name: 'IMAGE', type: 'IMAGE', links: [9], slot_index: 0, label: t('图像') }],
              properties: { 'Node name for S&R': 'VAEDecode' },
            },
            {
              id: 9,
              type: 'SaveImage',
              pos: [1451, 189],
              size: { '0': 323.5913391113281, '1': 318.1959533691406 },
              flags: {},
              order: 14,
              mode: 0,
              inputs: [{ name: 'images', type: 'IMAGE', link: 9, label: t('图像') }],
              properties: {},
              widgets_values: ['ComfyUI'],
            },
            {
              id: 20,
              type: 'EmbeddingPicker',
              pos: [448, 489],
              size: { '0': 210, '1': 148.00001525878906 },
              flags: {},
              order: 0,
              mode: 0,
              outputs: [{ name: 'text', type: 'STRING', links: [25], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'EmbeddingPicker' },
              widgets_values: ['EasyNegative.safetensors', 0.85, false, ''],
            },
            {
              id: 12,
              type: 'VAEEncodeForInpaint',
              pos: [413, 20],
              size: { '0': 315, '1': 98 },
              flags: {},
              order: 9,
              mode: 0,
              inputs: [
                { name: 'pixels', type: 'IMAGE', link: 14, label: t('图像'), slot_index: 0 },
                { name: 'vae', type: 'VAE', link: 15, label: 'VAE', slot_index: 1 },
                { name: 'mask', type: 'MASK', link: 13, label: t('遮罩') },
              ],
              outputs: [
                {
                  name: 'LATENT',
                  type: 'LATENT',
                  links: [16],
                  shape: 3,
                  label: 'Latent',
                  slot_index: 0,
                },
              ],
              properties: { 'Node name for S&R': 'VAEEncodeForInpaint' },
              widgets_values: [10],
            },
            {
              id: 10,
              type: 'LoadImage',
              pos: [-82, -48],
              size: { '0': 315, '1': 314.0000305175781 },
              flags: {},
              order: 1,
              mode: 0,
              outputs: [
                {
                  name: 'IMAGE',
                  type: 'IMAGE',
                  links: [14, 36],
                  shape: 3,
                  label: t('图像'),
                  slot_index: 0,
                },
                { name: 'MASK', type: 'MASK', links: [13], shape: 3, label: t('遮罩'), slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: [`${mask_img} [input]`, 'image'],
            },
            {
              id: 3,
              type: 'KSampler',
              pos: [863, 186],
              size: { '0': 315, '1': 262 },
              flags: {},
              order: 12,
              mode: 0,
              inputs: [
                { name: 'model', type: 'MODEL', link: 30, label: t('模型') },
                { name: 'positive', type: 'CONDITIONING', link: 34, label: t('正面提示词') },
                { name: 'negative', type: 'CONDITIONING', link: 35, label: t('负面提示词') },
                { name: 'latent_image', type: 'LATENT', link: 16, label: 'Latent' },
              ],
              outputs: [
                { name: 'LATENT', type: 'LATENT', links: [7], slot_index: 0, label: 'Latent' },
              ],
              properties: { 'Node name for S&R': 'KSampler' },
              widgets_values: [input_seed, 'randomize', 20, 6, 'dpmpp_sde', 'simple', 0.8],
            },
            {
              id: 23,
              type: 'CLIPVisionLoader',
              pos: [396, -205],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 2,
              mode: 0,
              outputs: [{ name: 'CLIP_VISION', type: 'CLIP_VISION', links: [27], shape: 3 }],
              properties: { 'Node name for S&R': 'CLIPVisionLoader' },
              widgets_values: ['SD1.5\\pytorch_model.bin'],
            },
            {
              id: 24,
              type: 'LoadImage',
              pos: [-82, -436],
              size: [315, 314.0000114440918],
              flags: {},
              order: 3,
              mode: 0,
              outputs: [
                { name: 'IMAGE', type: 'IMAGE', links: [28], shape: 3 },
                { name: 'MASK', type: 'MASK', links: null, shape: 3 },
              ],
              properties: { 'Node name for S&R': 'LoadImage' },
              widgets_values: ['893f5e5ef6f7661de8afa1067d235889.jpg', 'image'],
            },
            {
              id: 4,
              type: 'CheckpointLoaderSimple',
              pos: [-97, 413],
              size: { '0': 315, '1': 98 },
              flags: {},
              order: 4,
              mode: 0,
              outputs: [
                { name: 'MODEL', type: 'MODEL', links: [29], slot_index: 0, label: t('模型') },
                { name: 'CLIP', type: 'CLIP', links: [3, 5], slot_index: 1, label: 'CLIP' },
                { name: 'VAE', type: 'VAE', links: [8, 15], slot_index: 2, label: 'VAE' },
              ],
              properties: { 'Node name for S&R': 'CheckpointLoaderSimple' },
              widgets_values: ['Eva_AI.safetensors'],
            },
            {
              id: 21,
              type: 'IPAdapterApply',
              pos: [880, -286],
              size: { '0': 315, '1': 258 },
              flags: {},
              order: 10,
              mode: 4,
              inputs: [
                { name: 'ipadapter', type: 'IPADAPTER', link: 26, slot_index: 0 },
                { name: 'clip_vision', type: 'CLIP_VISION', link: 27, slot_index: 1 },
                { name: 'image', type: 'IMAGE', link: 28, slot_index: 2 },
                { name: 'model', type: 'MODEL', link: 29 },
                { name: 'attn_mask', type: 'MASK', link: null },
              ],
              outputs: [{ name: 'MODEL', type: 'MODEL', links: [30], shape: 3, slot_index: 0 }],
              properties: { 'Node name for S&R': 'IPAdapterApply' },
              widgets_values: [1, 0, 'original', 0, 1, false],
            },
            {
              id: 6,
              type: 'CLIPTextEncode',
              pos: [455, 197],
              size: { '0': 210, '1': 76 },
              flags: {},
              order: 7,
              mode: 0,
              inputs: [{ name: 'clip', type: 'CLIP', link: 3, label: 'CLIP' }],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [31],
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [prompt],
            },
            {
              id: 7,
              type: 'CLIPTextEncode',
              pos: [452, 338],
              size: { '0': 210, '1': 76 },
              flags: {},
              order: 8,
              mode: 0,
              inputs: [
                { name: 'clip', type: 'CLIP', link: 5, label: 'CLIP' },
                { name: 'text', type: 'STRING', link: 25, widget: { name: 'text' } },
              ],
              outputs: [
                {
                  name: 'CONDITIONING',
                  type: 'CONDITIONING',
                  links: [32],
                  slot_index: 0,
                  label: t('条件'),
                },
              ],
              properties: { 'Node name for S&R': 'CLIPTextEncode' },
              widgets_values: [''],
            },
            {
              id: 27,
              type: 'ControlNetLoader',
              pos: [863, 778],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 5,
              mode: 0,
              outputs: [{ name: 'CONTROL_NET', type: 'CONTROL_NET', links: [33], shape: 3 }],
              properties: { 'Node name for S&R': 'ControlNetLoader' },
              widgets_values: ['control_v11p_sd15_normalbae.pth'],
            },
            {
              id: 26,
              type: 'ControlNetApplyAdvanced',
              pos: [868, 536],
              size: { '0': 315, '1': 166 },
              flags: {},
              order: 11,
              mode: 0,
              inputs: [
                { name: 'positive', type: 'CONDITIONING', link: 31 },
                { name: 'negative', type: 'CONDITIONING', link: 32 },
                { name: 'control_net', type: 'CONTROL_NET', link: 33, slot_index: 2 },
                { name: 'image', type: 'IMAGE', link: 36, slot_index: 3 },
              ],
              outputs: [
                { name: 'positive', type: 'CONDITIONING', links: [34], shape: 3, slot_index: 0 },
                { name: 'negative', type: 'CONDITIONING', links: [35], shape: 3, slot_index: 1 },
              ],
              properties: { 'Node name for S&R': 'ControlNetApplyAdvanced' },
              widgets_values: [1, 0, 1],
            },
            {
              id: 22,
              type: 'IPAdapterModelLoader',
              pos: [398, -322],
              size: { '0': 315, '1': 58 },
              flags: {},
              order: 6,
              mode: 0,
              outputs: [{ name: 'IPADAPTER', type: 'IPADAPTER', links: [26], shape: 3 }],
              properties: { 'Node name for S&R': 'IPAdapterModelLoader' },
              widgets_values: ['ip-adapter_sd15.bin'],
            },
          ],
          links: [
            [3, 4, 1, 6, 0, 'CLIP'],
            [5, 4, 1, 7, 0, 'CLIP'],
            [7, 3, 0, 8, 0, 'LATENT'],
            [8, 4, 2, 8, 1, 'VAE'],
            [9, 8, 0, 9, 0, 'IMAGE'],
            [13, 10, 1, 12, 2, 'MASK'],
            [14, 10, 0, 12, 0, 'IMAGE'],
            [15, 4, 2, 12, 1, 'VAE'],
            [16, 12, 0, 3, 3, 'LATENT'],
            [25, 20, 0, 7, 1, 'STRING'],
            [26, 22, 0, 21, 0, 'IPADAPTER'],
            [27, 23, 0, 21, 1, 'CLIP_VISION'],
            [28, 24, 0, 21, 2, 'IMAGE'],
            [29, 4, 0, 21, 3, 'MODEL'],
            [30, 21, 0, 3, 0, 'MODEL'],
            [31, 6, 0, 26, 0, 'CONDITIONING'],
            [32, 7, 0, 26, 1, 'CONDITIONING'],
            [33, 27, 0, 26, 2, 'CONTROL_NET'],
            [34, 26, 0, 3, 1, 'CONDITIONING'],
            [35, 26, 1, 3, 2, 'CONDITIONING'],
            [36, 10, 0, 26, 3, 'IMAGE'],
          ],
          groups: [],
          config: {},
          extra: {},
          version: 0.4,
          widget_idx_map: { '3': { seed: 0, sampler_name: 4, scheduler: 5 } },
        },
      },
    },
  };
};
